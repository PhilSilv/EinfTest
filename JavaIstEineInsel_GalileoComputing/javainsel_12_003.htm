<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: Java ist auch eine Insel – 12.3 Die Eigenschaften der Klasse Math</title>
<meta name="title" content="Galileo Computing :: Java ist auch eine Insel - 12.3 Die Eigenschaften der Klasse Math">
<meta name="author" content="Christian Ullenboom ">
<meta name="publisher" content="Galileo Press 2011">
<meta name="copyright" content="Galileo Press 2011">
<meta name="Description" content="Java ist auch eine Insel - Das umfassende Handbuch – 12.3 Die Eigenschaften der Klasse Math">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href=".htm">
<link rel="next" href=".htm"><script type="text/javascript"><!--
    function OpenWin(url,name,height,width)
    {
      var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
      InfoWin.focus();
    }
    //--></script><link href="common/prettify.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="common/prettify.js"></script></head>
<body vlink="#000099" link="#000099" alink="#000099" onload="prettyPrint()">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
<tr>
<td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook?GPP=opjiVIV"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
<td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opjiVIV"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle Bücher. Auch für Einsteiger." title="Galileo Computing - Professionelle Bücher. Auch für Einsteiger."></a></td>
</tr>
</table>
<div align="right"><a href="http://www.galileocomputing.de/?GPP=opjiVIV" class="navnav">Professionelle Bücher. Auch für Einsteiger.</a></div><br><table class="tbl" border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td width="190" valign="top">
<table class="tbl1" border="0" cellpadding="3" cellspacing="0" width="190" align="left">
<tr>
<td class="tbl2"><a class="nav" href="index.htm#_top">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_00_001.htm#mj58b119301920569a446c9c510503f310">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_01_001.htm#mja8fc5b7ad19fc7332bc66b09a8fda26e">1 Java ist auch eine Sprache</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_02_001.htm#mj313f67c98dc9ecaddfa2d8b80f057fd2">2 Sprachbeschreibung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_03_001.htm#mjcd3b5720e8605484942e3476a1075bdf">3 Klassen und Objekte</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_04_001.htm#mj71fbc84ad33a281b9352b0b19fae2fb2">4 Der Umgang mit Zeichenketten</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_05_001.htm#mj005cd8e604aefc3ae72b92880fcee5c6">5 Eigene Klassen schreiben</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_06_001.htm#mj6f6b47453043c38837bfc32154a97968">6 Exceptions</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_07_001.htm#mjc4a1f6f3499a02fb64fe89046739edca">7 Generics&lt;T&gt;</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_08_001.htm#mj46e914488628367f5dfc0a62c3a78a53">8 Äußere.innere Klassen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_09_001.htm#mj94af2b90e8a2dad6c1ef67255f89a137">9 Besondere Klassen der Java SE</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_10_001.htm#mjcae20f50ffbc015d0b66861e7087af9b">10 Architektur, Design und angewandte Objektorientierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_11_001.htm#mj60bc6a007ae9b8657949f3e91d96df3d">11 Die Klassenbibliothek</a></td>
</tr>
<tr>
<td><a class="navh" href="##mj0ce00eb41aae2b084534019cf6edc3b6">12 Bits und Bytes und Mathematisches</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_13_001.htm#mj245f5f8d5a858b46462d64e9b9c0786b">13 Datenstrukturen und Algorithmen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_14_001.htm#mj8c6f381221d805dd6fbe480731ac0c58">14 Threads und nebenläufige Programmierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_15_001.htm#mjbe3ed0989722396930966f95deeb2497">15 Raum und Zeit</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_16_001.htm#mj78bd405fb0de0cff099c06255fe36853">16 Dateien, Verzeichnisse und Dateizugriffe</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_17_001.htm#mjb420b02f4ccf65226f7271e48cefa05d">17 Datenströme</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_18_001.htm#mjedab16f1a9cc168eda4a24416359e0b9">18 Die eXtensible Markup Language (XML)</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_19_001.htm#mjc8f47f7f51ac3795c46c4544f391b02e">19 Grafische Oberflächen mit Swing</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_20_001.htm#mj25cc7d47e476b8b1a183a10ee741dbaa">20 Grafikprogrammierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_21_001.htm#mjea7bcdd596c8bd25b078a00221a01a75">21 Netzwerkprogrammierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_22_001.htm#mjde622db61608a627262a27ecb377d675">22 Verteilte Programmierung mit RMI</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_23_001.htm#mj23bf599d65364bcd05d06a34cb5593bf">23 JavaServer Pages und Servlets</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_24_001.htm#mja621f3b4a74c7fa576b4a58b1614041e">24 Datenbankmanagement mit JDBC</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_25_001.htm#mja2e217bf5724cc65eba184a2af8b79cf">25 Reflection und Annotationen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_26_001.htm#mjb47dd6e0a309b7e78cad68f6b5de9319">26 Dienstprogramme für die Java-Umgebung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_27_001.htm#mjf59db36d9280a70e0d3d196e9bf160f5">A Die Begleit-DVD</a></td>
</tr>
<tr>
<td><a class="navnav" href="stichwort.htm#_top">Stichwort</a></td>
</tr>
<tr>
<td><br><a href="http://download2.galileo-press.de/openbook/galileocomputing_javainsel9.zip" class="navnav"><strong>Download:</strong><br>- ZIP, ca. 20,5 MB</a></td>
</tr>
<tr>
<td><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="navnav">Buch bestellen</a></td>
</tr>
<tr>
<td><a class="navnav" href="#kommentar">Ihre Meinung?</a><br><br></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10" alt="Spacer"></td>
<td width="85%" valign="top" align="center"><div align="center">
<table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="javainsel_12_002.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a href="http://www.galileocomputing.de/?GPP=opjiVIV" class="navnav">Galileo Computing /</a><a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opjiVIV" class="navnav"> &lt;openbook&gt; /</a><a href="index.htm" class="navnav"> Java-Insel</a></div></td>
<td align="right" width="25%"><div align="right"><a href="javainsel_12_004.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" valign="top"><table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
<tr>
<td colspan="2"><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="buchtitel">Java ist auch eine Insel</a><span class="autor"> von Christian Ullenboom </span><br><span class="untertitel">Das umfassende Handbuch</span></td>
</tr>
<tr>
<td valign="top" width="211"><dl>
<dt><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="navnav"><img src="common/9783836215060.gif" border="0" alt="Buch: Java ist auch eine Insel" title="Buch: Java ist auch eine Insel"></a></dt>
<dd><br><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV"><span class="autor"><strong>Java ist auch eine Insel</strong><br>geb., mit DVD<br>1482 S., 49,90 Euro<br>Galileo Computing<br>ISBN 978-3-8362-1506-0</span></a></dd>
</dl></td>
<td width="80%"><table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="3" class="kap"><strong><a href="javainsel_12_001.htm#mj0ce00eb41aae2b084534019cf6edc3b6" class="navnav">12 Bits und Bytes und Mathematisches</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_12_001.htm#mje9b90073f9a6a7e879622df6429acbf6" class="navnav">12.1 Bits und Bytes *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_001.htm#mjf41db20fa8422536625ef7f9e97aaa77" class="navnav">12.1.1 Die Bit-Operatoren Komplement, Und, Oder und Xor</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_001.htm#mj68ee5bb61976ba124da977d1662a5bea" class="navnav">12.1.2 Repräsentation ganzer Zahlen in Java &#8211; das Zweierkomplement</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_001.htm#mjfbec58f8ff2067ac66755c7cb2c0f9b7" class="navnav">12.1.3 Auswirkung der Typanpassung auf die Bitmuster</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_001.htm#mj7155b7bcc45b802242d7d23cf4395e61" class="navnav">12.1.4 »byte« als vorzeichenlosen Datentyp nutzen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_001.htm#mj7471d7019b56d0bf8ea862bc9f8db7a0" class="navnav">12.1.5 Die Verschiebeoperatoren</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_001.htm#mjeee1deeb8d213c0b333f1c983f1ac94c" class="navnav">12.1.6 Ein Bit setzen, löschen, umdrehen und testen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_001.htm#mjbf4a7e65e1ff71094e3777c1a12bbada" class="navnav">12.1.7 Bit-Methoden der Integer- und Long-Klasse</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_12_002.htm#mj98656ad94dde9f88b6ee533b44b23d6b" class="navnav">12.2 Fließkommaarithmetik in Java</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_002.htm#mje243bcc42966365e4a66c8359cc07638" class="navnav">12.2.1 Spezialwerte für Unendlich, Null, NaN</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_002.htm#mj460db4438d2096f55b59e776dc2d84da" class="navnav">12.2.2 Standard-Notation und wissenschaftliche Notation bei Fließkommazahlen *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_002.htm#mj619c77e97f365a03e7bfea2ba0c64530" class="navnav">12.2.3 Mantisse und Exponent *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="#mja764079554f73fbeafb1b33c563aae00" class="navh">12.3 Die Eigenschaften der Klasse Math</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj091e2f449d2fa5247e2e0fadc9415906" class="navh">12.3.1 Attribute</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj5e0759f316ac5cd9af03f3188a127485" class="navh">12.3.2 Absolutwerte und Vorzeichen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mjb859bc3ac0d26103903c0930c5011ef8" class="navh">12.3.3 Maximum/Minimum</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj2e6bc08eb80588c258eef0a0f51aed01" class="navh">12.3.4 Runden von Werten</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mjc920503eef16d7902c69a55412d9cc79" class="navh">12.3.5 Wurzel und Exponentialmethoden</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj1b6e5fdaa687321d8efe01e658f11ea2" class="navh">12.3.6 Der Logarithmus *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj53f5e8e580776adf0d072543f59db20d" class="navh">12.3.7 Rest der ganzzahligen Division *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj38096c5e01c666daa0c14dc50aecda46" class="navh">12.3.8 Winkelmethoden *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mje77a8acf200c41b84e6965565dc79ea8" class="navh">12.3.9 Zufallszahlen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_12_004.htm#mjd15c0421c5a3116bc9c6ae458a27442a" class="navnav">12.4 Mathe bitte strikt *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_004.htm#mj89cd63dbc2570b89a83a734b287141de" class="navnav">12.4.1 Strikte Fließkommaberechungungen mit strictfp</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_004.htm#mj247f95417d6cbf88dc348c46425041a3" class="navnav">12.4.2 Die Klassen Math und StrictMath</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_12_005.htm#mje4ad6e86a12fd27d9d70730955ca4f9c" class="navnav">12.5 Die Random-Klasse</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_005.htm#mjeba095819d66206187d9dcd64dfb1f15" class="navnav">12.5.1 Objekte aufbauen mit dem Samen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_005.htm#mjb49a5f343c7ae88040ab6a26c390e79b" class="navnav">12.5.2 Zufallszahlen erzeugen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_005.htm#mj78a73cd36be000e3723a6b264559fcb4" class="navnav">12.5.3 Pseudo-Zufallszahlen in der Normalverteilung *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_12_006.htm#mjb7eac3af197800d59092e82df405f7d8" class="navnav">12.6 Große Zahlen *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_006.htm#mj26d475e731cd7f91bbf8804338268382" class="navnav">12.6.1 Die Klasse BigInteger</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_006.htm#mj9e465fe675d15d3bc3ed1b5abc717ddd" class="navnav">12.6.2 Methoden von BigInteger</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_006.htm#mj17d47a85d74215f34434aac2e8afdd16" class="navnav">12.6.3 Ganz lange Fakultäten</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_006.htm#mjf036bc1893d76e8855590f7a9a00f5d8" class="navnav">12.6.4 Große Fließkommazahlen mit BigDecimal</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_12_006.htm#mja77c5e58cdfad7518eecbc93ef219228" class="navnav">12.6.5 Mit MathContext komfortabel die Rechengenauigkeit setzen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_12_007.htm#mj03c66eab29df8a7ce901478f6cf9f4f9" class="navnav">12.7 Zum Weiterlesen</a></strong></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td><div class="main"><a id="mja764079554f73fbeafb1b33c563aae00" name="mja764079554f73fbeafb1b33c563aae00"></a><a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2"><span class="cfett">12.3</span> Die Eigenschaften der Klasse Math  <a href="#t2t32"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></h2>
<p>Die Klasse <span class="clisting">java.lang.Math</span> ist eine typische Utility-Klasse, die nur statische Methoden (beziehungsweise Attribute als Konstanten) deklariert. Mit dem privaten Konstruktor lassen sich (so leicht) keine Exemplare von <span class="clisting">Math</span> erzeugen.</p>
<div class="bildbox">
<p><a name="IDAOGWD"></a><a onClick="OpenWin('bilder/mathuml.gif','Abbildung',800,800)"><img border="0" src="bilderklein/kleinmathuml.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div><a id="mj091e2f449d2fa5247e2e0fadc9415906" name="mj091e2f449d2fa5247e2e0fadc9415906"></a><a name="t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t32"></a><h3 class="t3"><span class="cfett">12.3.1</span> Attribute  <a href="#t2t33"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t31"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Die <span class="clisting">Math</span>-Klasse besitzt zwei statische Attribute:</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.lang.<span class="cfett">Math</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static final double E</span>
Die Eulersche Zahl [Die irrationale Zahl e ist nach dem schweizerischen Mathematiker Leonhard Euler (1707&#8211;1783) benannt.
]  e = 2.7182818284590452354.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static final double PI</span>
Die Kreiszahl Pi = 3.14159265358979323846. [Wer noch auf der Suche nach einer völlig unsinnigen Information ist: Die einmilliardste Stelle hinter dem Komma von Pi ist eine Neun.
] </li>
</ul><a id="mj5e0759f316ac5cd9af03f3188a127485" name="mj5e0759f316ac5cd9af03f3188a127485"></a><a name="t32"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t33"></a><h3 class="t3"><span class="cfett">12.3.2</span> Absolutwerte und Vorzeichen  <a href="#t2t34"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t32"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Die zwei statischen <span class="clisting">abs()</span>-Methoden liefern den Betrag des Arguments (mathematische Betragsfunktion: <span class="ckursiv">y</span> = |<span class="ckursiv">x</span>|). Sollte ein negativer Wert als Argument übergeben werden, wandelt ihn <span class="clisting">abs()</span> in einen positiven Wert um.</p>
<p>Die Methode <span class="clisting">signum()</span> ist die Vorzeichenfunktion. Ist das Argument positiv, ist die Rückgabe 1.0, ist sie negativ, dann &#8211;1.0 und sonst 0.</p>
<p>Eine spezielle Methode ist auch <span class="clisting">copySign()</span>. Sie ermittelt das Vorzeichen einer Fließkommazahl und setzt dieses Vorzeichen bei einer anderen.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.lang.<span class="cfett">Math</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static int abs( int x )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static long abs( long x )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static float abs( float x )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static double abs( double x )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static double signum( double d )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static float signum( float f )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static double copySign( double magnitude, double sign )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static float copySign( float magnitude, float sign )</span>
Liefert <span class="clisting">magnitude</span> als Rückgabe, aber mit dem Vorzeichen von <span class="clisting">sign</span>.</li>
</ul><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Hinweis   </span>Es gibt genau einen Wert, auf den <span class="clisting">Math.abs(int)</span> keine positive Rückgabe liefern kann: &#8211;2147483648. Dies ist die kleinste darstellbare <span class="clisting">int</span>-Zahl (<span class="clisting">Integer.MIN_VALUE</span>), während +2147483648 gar nicht in ein <span class="clisting">int</span> passt! Die größte darstellbare <span class="clisting">int</span>-Zahl ist 2147483647 (<span class="clisting">Integer.MAX_VALUE</span>). Was sollte <span class="clisting">abs(-2147483648)</span> auch ergeben?</p>
</td>
</tr>
</table><br><a id="mjb859bc3ac0d26103903c0930c5011ef8" name="mjb859bc3ac0d26103903c0930c5011ef8"></a><a name="t33"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t34"></a><h3 class="t3"><span class="cfett">12.3.3</span> Maximum/Minimum  <a href="#t2t35"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t33"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Die statischen <span class="clisting">max()</span>-Methoden liefern den größeren der übergebenen Werte. Die statischen <span class="clisting">min()</span>-Methoden liefern den kleineren von zwei Werten als Rückgabewert.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.lang.<span class="cfett">Math</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static int max( int x, int y )</span>, <span class="clisting">static long max( long x, long y )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static float max( float x, float y )</span>, <span class="clisting">static double max( double x, double y )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static int min( int x, int y )</span>, <span class="clisting">static long min( long x, long y )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static float min( float x, float y )</span>, <span class="clisting">static double min( double x, double y )</span></li>
</ul><a id="mj2e6bc08eb80588c258eef0a0f51aed01" name="mj2e6bc08eb80588c258eef0a0f51aed01"></a><a name="t34"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t35"></a><h3 class="t3"><span class="cfett">12.3.4</span> Runden von Werten  <a href="#t2t36"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t34"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Für die Rundung von Werten bietet die Klasse <span class="clisting">Math</span> fünf statische Methoden:</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.lang.<span class="cfett">Math</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static double ceil( double )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static double floor( double )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static int round( float a )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static long round( double a )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static double rint( double )</span></li>
</ul>
<h4 class="t4">Auf- und Abrunden mit »ceil()« und »floor()«</h4>
<p>Die statische Methode <span class="clisting">ceil()</span> dient zum Aufrunden und liefert die nächsthöhere Ganzzahl (jedoch als <span class="clisting">double</span>, nicht als <span class="clisting">long</span>), wenn die Zahl nicht schon eine ganze Zahl ist; die statische Methode <span class="clisting">floor()</span> rundet auf die nächstniedrigere Ganzzahl ab:</p>
<p class="tabunter"><strong>Listing 12.1    </strong>RoundingDemo.java, Ausschnitt</p>
<div class="listing"><pre class="prettyprint">System.out.println( Math.<span class="cfett">ceil</span>(-99.1) );    //  &#8211;99.0
System.out.println( Math.<span class="cfett">floor</span>(-99.1) );   // &#8211;100.0
System.out.println( Math.<span class="cfett">ceil</span>(-99) );      //  &#8211;99.0
System.out.println( Math.<span class="cfett">floor</span>(-99) );     //  &#8211;99.0
System.out.println( Math.<span class="cfett">ceil</span>(-.5) );      //   &#8211;0.0
System.out.println( Math.<span class="cfett">floor</span>(-.5) );     //   &#8211;1.0
System.out.println( Math.<span class="cfett">ceil</span>(-.01) );     //   &#8211;0.0
System.out.println( Math.<span class="cfett">floor</span>(-.01) );    //   &#8211;1.0
System.out.println( Math.<span class="cfett">ceil</span>(0.1) );      //    1.0
System.out.println( Math.<span class="cfett">floor</span>(0.1) );     //    0.0
System.out.println( Math.<span class="cfett">ceil</span>(.5) );       //    1.0
System.out.println( Math.<span class="cfett">floor</span>(.5) );      //    0.0
System.out.println( Math.<span class="cfett">ceil</span>(99) );       //   99.0
System.out.println( Math.<span class="cfett">floor</span>(99) );      //   99.0</pre></div>
<p>Die genannten statischen Methoden haben auf ganze Zahlen keine Auswirkung.</p>
<h4 class="t4">Kaufmännisches Runden mit »round()«</h4>
<p>Die statischen Methoden <span class="clisting">round(double)</span> und <span class="clisting">round(float)</span> runden kaufmännisch auf die nächste Ganzzahl vom Typ <span class="clisting">long</span> beziehungsweise <span class="clisting">int</span>. Ganze Zahlen werden nicht aufgerundet. Wir können <span class="clisting">round()</span> als Gegenstück zur Typumwandlung <span class="clisting">(long) doublevalue</span> einsetzen:</p>
<p class="tabunter"><strong>Listing 12.2    </strong>RoundingDemo.java, Ausschnitt</p>
<div class="listing"><pre class="prettyprint">System.out.println( Math.round(1.01) );     //  1
System.out.println( Math.round(1.4) );      //  1
System.out.println( Math.round(1.5) );      //  2
System.out.println( Math.round(1.6) );      //  2
System.out.println( (int) 1.6 );            //  1
System.out.println( Math.round(30) );       // 30
System.out.println( Math.round(-2.1) );     // &#8211;2
System.out.println( Math.round(-2.9) );     // &#8211;3
System.out.println( (int) &#8211;2.9 );           // &#8211;2</pre></div><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Beispiel   </span>Die <span class="clisting">Math.round()</span>-Methode ist in Java ausprogrammiert. Sie addiert auf den aktuellen Parameter 0,5 und übergibt das Ergebnis der statischen <span class="clisting">floor()</span>-Methode:</p>
<div class="listing"><pre class="prettyprint">public static long round( double a ) {
  return (int) floor( a + 0.5f );
}</pre></div>
</td>
</tr>
</table><br><h4 class="t4">Gerechtes Runden »rint()«</h4>
<p><span class="clisting">rint()</span> ist mit <span class="clisting">round()</span> vergleichbar, nur ist es im Gegensatz zu <span class="clisting">round()</span> gerecht, was bedeutet, dass <span class="clisting">rint()</span> bei 0,5 in Abhängigkeit davon, ob die benachbarte Zahl ungerade oder gerade ist, auf- oder abrundet:</p>
<p class="tabunter"><strong>Listing 12.3    </strong>RoundingDemo.java, Ausschnitt</p>
<div class="listing"><pre class="prettyprint">System.out.println( Math.round(-1.5) );     //   &#8211;1
System.out.println( Math.rint( &#8211;1.5) );     // &#8211;2.0
System.out.println( Math.round(-2.5) );     //   &#8211;2
System.out.println( Math.rint( &#8211;2.5) );     // &#8211;2.0
System.out.println( Math.round( 1.5) );     //    2
System.out.println( Math.rint(  1.5) );     //  2.0
System.out.println( Math.round( 2.5) );     //    3
System.out.println( Math.rint(  2.5) );     //  2.0</pre></div>
<p>Mit einem konsequenten Auf- oder Abrunden pflanzen sich natürlich auch Fehler ungeschickter fort als mit dieser 50/50-Strategie.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Beispiel   </span>Die statische <span class="clisting">rint()</span>-Methode lässt sich auch einsetzen, wenn Zahlen auf zwei Nachkommastellen gerundet werden sollen. Ist <span class="clisting">d</span> vom Typ <span class="clisting">double</span>, so ergibt der Ausdruck <span class="clisting">Math.rint(d*100.0)/100.0</span> die gerundete Zahl.</p>
</td>
</tr>
</table><br><p class="tabunter"><strong>Listing 12.4    </strong>Round2Scales.java</p>
<div class="listing"><pre class="prettyprint">class Round2Scales
{
  public static double roundScale2( double d )
  {
    return Math.rint( d * 100 ) / 100.;
  }

  public static void main( String[] args )
  {
    System.out.println( roundScale2(+1.341 ) );    //  1.34
    System.out.println( roundScale2(&#8211;1.341 ) );    // &#8211;1.34
    System.out.println( roundScale2(+1.345 ) );    //  1.34
    System.out.println( roundScale2(&#8211;1.345 ) );    // &#8211;1.34

    System.out.println( roundScale2(+1.347 ) );    //  1.35
    System.out.println( roundScale2(&#8211;1.347 ) );    // &#8211;1.35
  }
}</pre></div>
<p>Arbeiten wir statt mit <span class="clisting">rint()</span> mit <span class="clisting">round()</span>, wird die Zahl 1,345 nicht auf 1,34, sondern auf 1,35 gerundet. Wer nun Lust hat, etwas auszuprobieren, darf testen, wie der Formatstring »%.2f« bei <span class="clisting">printf()</span> rundet.</p><a id="mjc920503eef16d7902c69a55412d9cc79" name="mjc920503eef16d7902c69a55412d9cc79"></a><a name="t35"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t36"></a><h3 class="t3"><span class="cfett">12.3.5</span> Wurzel und Exponentialmethoden  <a href="#t2t37"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t35"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Die <span class="clisting">Math</span>-Klasse bietet weiterhin Methoden zum Berechnen der Wurzel und weitere Exponentialmethoden.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.lang.<span class="cfett">Math</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static double sqrt( double x )</span>
Liefert die Quadratwurzel von <span class="clisting">x</span>; <span class="clisting">sqrt</span> steht für <span class="ckursiv">square root</span>.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static double cbrt( double a )</span>
Berechnet die dritte Wurzel aus <span class="clisting">a</span>.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static double hypot( double x, double y )</span>
Berechnet die Wurzel aus x^2 + y^2, also den euklidischen Abstand. Könnte als <span class="clisting">sqrt(x*x, y*y)</span> umgeschrieben werden, doch <span class="clisting">hypot()</span> bietet eine bessere Genauigkeit und Performance.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static double scalb( double d, double scaleFactor )</span>
Liefert <span class="clisting">d</span> mal <span class="clisting">2</span> hoch <span class="clisting">scaleFactor</span>. Kann prinzipiell auch als <span class="clisting">d * Math.pow(2, scaleFactor)</span> geschrieben werden, doch <span class="clisting">scalb()</span> bietet eine bessere Performance.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static double exp( double x )</span>
Liefert den Exponentialwert von <span class="clisting">x</span> zur Basis e (der Eulerschen Zahl e = 2,71828…), also e<sup>x  </sup>.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static double expm1( double x )</span>
Liefert den Exponentialwert von <span class="clisting">x</span> zur Basis e minus 1, also e<sup>x  </sup> &#8211; 1. Berechnungen nahe null kann <span class="clisting">expm1(x) + 1</span> präziser ausdrücken als <span class="clisting">exp(x)</span>.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static double pow( double x, double y )</span>
Liefert den Wert der Potenz <span class="ckursiv">x</span><sup>y  </sup>. Für ganzzahlige Werte gibt es keine eigene Methode.</li>
</ul>
<h4 class="t4">Die Frage nach dem 0.0/0.0 und 0.0^0.0 *</h4>
<p>Wie wir wissen, ist 0.0/0.0 ein glattes NaN. Im Unterschied zu den Ganzzahlwerten bekommen wir hier allerdings keine Exception, denn dafür ist extra die Spezialzahl NaN eingeführt worden. Interessant ist die Frage, was denn <span class="clisting">(long)(double)(0.0/0.0)</span> ergibt. Die Sprachdefinition sagt hier in §5.1.3, dass die Konvertierung eines Fließkommawerts NaN in ein <span class="clisting">int</span> 0 oder <span class="clisting">long</span> 0 ergibt. [Leider gab es in den ersten Versionen der JVM einen Fehler, sodass <span class="clisting">Long.MAX_VALUE</span> anstelle von 0.0 produziert wurde. Dieser Fehler ist aber inzwischen behoben.
] </p>
<p>Eine weitere spannende Frage ist das Ergebnis von 0.0^0.0. Um allgemeine Potenzen zu berechnen, wird die statische Funktion <span class="clisting">Math.pow(double a, double b)</span> eingesetzt. Wir erinnern uns aus der Schulzeit daran, dass wir die Quadratwurzel einer Zahl ziehen, wenn der Exponent <span class="clisting">b</span> genau 1/2 ist. Doch jetzt wollen wir wissen, was denn gilt, wenn <span class="clisting">a = b = 0</span> gilt. §20.11.13 der Sprachdefinition fordert, dass das Ergebnis immer 1.0 ist, wenn der Exponent <span class="clisting">b</span> gleich &#8211;0.0 oder 0.0 ist. Es kommt also in diesem Fall überhaupt nicht auf die Basis <span class="clisting">a</span> an. In einigen Algebra-Büchern wird 0^0 als undefiniert behandelt. Es macht aber durchaus Sinn, 0^0 als 1 zu definieren, da es andernfalls viele Sonderbehandlungen für 0 geben müsste. [Hier schreiben die Autoren R. Graham, D. Knuth, O. Patashnik des Buchs <span class="ckursiv">Concrete Mathematics</span>: »Some textbooks leave the quantity 0^0 undefined, because the functions x^0 and 0^x have different limiting values when x decreases to 0. But this is a mistake. We must define x^0 = 1 for all x, if the binomial theorem is to be valid when x=0, y=0, and/or x=-y. The theorem is too important to be arbitrarily restricted! By contrast, the function 0^x is quite unimportant.«
] </p><a id="mj1b6e5fdaa687321d8efe01e658f11ea2" name="mj1b6e5fdaa687321d8efe01e658f11ea2"></a><a name="t36"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t37"></a><h3 class="t3"><span class="cfett">12.3.6</span> Der Logarithmus *  <a href="#t2t38"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t36"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Der Logarithmus ist die Umkehrfunktion der Exponentialfunktion. Die Exponentialfunktion und der Logarithmus hängen durch folgende Beziehung zusammen: Ist <span class="ckursiv">y</span> = <span class="ckursiv">a</span><sup>x  </sup>, dann ist <span class="ckursiv">x</span> = log<sub><sub>a</sub></sub>(<span class="ckursiv">y</span>). Der Logarithmus, den <span class="clisting">Math.log()</span> berechnet, ist der natürliche Logarithmus zur Basis e. In der Mathematik wird dieser mit »ln« angegeben (<span class="ckursiv">logarithmus naturalis</span>). Logarithmen mit der Basis 10 heißen <span class="ckursiv">dekadische</span> oder <span class="ckursiv">briggsche Logarithmen</span> und werden mit »lg« abgekürzt; der Logarithmus zur Basis 2 (<span class="ckursiv">binärer Logarithmus</span>, <span class="ckursiv">dualer Logarithmus</span>) wird mit »lb« abgekürzt. In Java gibt es die statische Methode <span class="clisting">log10()</span> für den briggschen Logarithmus lg, nicht aber für den binären Logarithmus lb, der weiterhin nachgebildet werden muss. Allgemein gilt folgende Umrechnung: log<sub><sub>b</sub></sub>(<span class="ckursiv">x</span>) = log<sub><sub>a</sub></sub>(<span class="ckursiv">x</span>) / log<sub><sub>a</sub></sub>(<span class="ckursiv">b</span>).</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Beispiel   </span>Eine eigene statische Methode soll den Logarithmus zur Basis 2 berechnen:</p>
<div class="listing"><pre class="prettyprint">public static double lb( double x )
{
  return Math.log( x ) / Math.log( 2.0 );
}</pre></div>
<p class="BStandard">Da <span class="clisting">Math.log(2)</span> konstant ist, sollte dieser Wert aus Performance-Gründen in einer Konstanten gehalten werden.</p>
</td>
</tr>
</table><br><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.lang.<span class="cfett">Math</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static double log( double a )</span>
Berechnet von <span class="clisting">a</span> den Logarithmus zur Basis e.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static double log10( double a )</span>
Liefert von <span class="clisting">a</span> den Logarithmus zur Basis 10.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static double log1p( double x )</span>
Liefert log(<span class="ckursiv">x</span>) + 1.</li>
</ul><a id="mj53f5e8e580776adf0d072543f59db20d" name="mj53f5e8e580776adf0d072543f59db20d"></a><a name="t37"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t38"></a><h3 class="t3"><span class="cfett">12.3.7</span> Rest der ganzzahligen Division *  <a href="#t2t39"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t37"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Neben dem Restwertoperator <span class="clisting">%</span>, der den Rest der Division berechnet, gibt es auch eine statische Methode <span class="clisting">Math.IEEEremainder()</span>.</p>
<p class="tabunter"><strong>Listing 12.5    </strong>IEEEremainder.java, main()</p>
<div class="listing"><pre class="prettyprint">double a = 44.0;
double b = 2.2;
System.out.println( a / b );                      // 20.0
System.out.println(<span class="cfett"> a % b</span> );                      // 2.1999999999999966
System.out.println(<span class="cfett"> Math.IEEEremainder( a, b )</span> ); // &#8211;3.552713678800501E-15</pre></div>
<p>Das zweite Ergebnis ist mit der mathematischen Ungenauigkeit fast 2,2, aber etwas kleiner, sodass der Algorithmus nicht noch einmal 2,2 abziehen konnte. Die statische Methode <span class="clisting">IEEEremainder()</span> liefert ein Ergebnis nahe null (&#8211;0,0000000000000035527136788005), was besser ist, denn 44,0 lässt sich ohne Rest durch 2,2 teilen, also wäre der Rest eigentlich 0.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.lang.<span class="cfett">Math</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static double IEEEremainder( double dividend, double divisor )</span>
Liefert den Rest der Division von Dividend und Divisor, so wie es der IEEE-754-Standard vorschreibt.</li>
</ul>
<p>Eine eigene statische Methode, die mitunter bessere Ergebnisse liefert (in unserem Fall wirklich 0,0), ist die folgende:</p>
<div class="listing"><pre class="prettyprint">public static double remainder( double a, double b )
{
  return Math.signum(a) *
         (Math.abs(a) &#8211; Math.abs(b) * Math.floor(Math.abs(a)/Math.abs(b)));
}</pre></div><a id="mj38096c5e01c666daa0c14dc50aecda46" name="mj38096c5e01c666daa0c14dc50aecda46"></a><a name="t38"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t39"></a><h3 class="t3"><span class="cfett">12.3.8</span> Winkelmethoden *  <a href="#t2t310"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t38"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Die <span class="clisting">Math</span>-Klasse stellt einige winkelbezogene Methoden und ihre Umkehrungen zur Verfügung. Im Gegensatz zur bekannten Schulmathematik werden die Winkel für <span class="clisting">sin()</span>, <span class="clisting">cos()</span>, <span class="clisting">tan()</span> im Bogenmaß (2 * Pi entspricht einem Vollkreis) und nicht im Gradmaß (360 Grad entspricht einem Vollkreis) übergeben.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.lang.<span class="cfett">Math</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static double sin( double x )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static double cos( double x )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static double tan( double x )</span>
Liefert den Sinus/Kosinus/Tangens von <span class="clisting">x</span>.</li>
</ul>
<h4 class="t4">Arcus-Methoden</h4>
<p>Die Arcus-Methoden realisieren die Umkehrfunktionen zu den trigonometrischen Methoden. Das Argument ist kein Winkel, sondern zum Beispiel bei <span class="clisting">asin()</span> der Sinuswert zwischen &#8211;1 und 1. Das Ergebnis ist dann ein Winkel im Bogenmaß, etwa zwischen -Pi/2 und Pi/2.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.lang.<span class="cfett">Math</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static double asin( double x )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static double acos( double x )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static double atan( double x )</span>
Liefert den Arcus-Sinus, Arcus-Kosinus beziehungsweise Arcus-Tangens von <span class="clisting">x</span>.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static atan2( double x, double y )</span>
Liefert bei der Konvertierung von Rechteckkoordinaten in Polarkoordinaten den Winkel <span class="ckursiv">theta</span>, also eine Komponente des Polarkoordinaten-Tupels. Die statische Methode berücksichtigt das Vorzeichen der Parameter <span class="clisting">x</span> und <span class="clisting">y</span>, und der freie Schenkel des Winkels befindet sich im richtigen Quadranten.</li>
</ul>
<p>Hyperbolicus-Methoden bietet Java über <span class="clisting">sinh()</span>, <span class="clisting">tanh()</span> und <span class="clisting">cosh()</span>.</p>
<h4 class="t4">Umrechnungen von Gradmaß in Bogenmaß</h4>
<p>Zur Umwandlung eines Winkels von Gradmaß in Bogenmaß und umgekehrt existieren zwei statische Methoden.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.lang.<span class="cfett">Math</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static double toRadians( double angdeg )</span>
Wandelt Winkel von Gradmaß in Bogenmaß um.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static double toDegrees( double angrad )</span>
Wandelt Winkel von Bogenmaß in Gradmaß um.</li>
</ul><a id="mje77a8acf200c41b84e6965565dc79ea8" name="mje77a8acf200c41b84e6965565dc79ea8"></a><a name="t39"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t310"></a><h3 class="t3"><span class="cfett">12.3.9</span> Zufallszahlen  <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><a href="#t2t39"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Positive Gleitkomma-Zufallszahlen zwischen größer gleich 0,0 und echt kleiner 1,0 liefert die statische Methode <span class="clisting">Math.random()</span>. Die Rückgabe ist <span class="clisting">double</span>, und eine Typanpassung auf <span class="clisting">int</span> führt immer zum Ergebnis 0.</p>
<p>Möchten wir Werte in einem anderen Wertebereich haben, ist es eine einfache Lösung, die Zufallszahlen von <span class="clisting">Math.random()</span> durch Multiplikation (Skalierung) auf den gewünschten Wertebereich auszudehnen und per Addition (ein Offset) geeignet zu verschieben. Um ganzzahlige Zufallszahlen zwischen <span class="clisting">min</span> (inklusiv) und <span class="clisting">max</span> (inklusiv) zu erhalten, schreiben wir:</p>
<p class="tabunter"><strong>Listing 12.6    </strong>RandomIntInRange.java</p>
<div class="listing"><pre class="prettyprint">public static long random( long min, long max )
{
  return min + Math.round( Math.random() * (max &#8211; min) );
}</pre></div>
<p>Eine Alternative bietet der direkte Einsatz der Klasse <span class="clisting">Random</span> und der Objektmethode <span class="clisting">next-Int(n)</span>.</p><br><hr><a name="kommentar"></a><h3>Ihr Kommentar</h3>
                       Wie hat Ihnen das &lt;openbook&gt; gefallen? Wir freuen uns immer über Ihre freundlichen und kritischen Rückmeldungen.
                       <form action="http://www.galileo-press.de/feedback/openbook" method="post" style="text-align: center; margin-top: 10px;"><input type="hidden" name="openbookurl" value="javainsel9/.htm"><input type="hidden" name="buchtitel" value="Java ist auch eine Insel"><input type="hidden" name="Kapitel" value="12.3 Die Eigenschaften der Klasse Math"><table border="0">
<tr>
<td><label for="name">Name</label><br></td>
<td><input type="text" name="name" id="name" size="40"><br></td>
</tr>
<tr>
<td><label for="email">E-Mail</label><br></td>
<td><input type="text" name="email" id="email" size="40"><br></td>
</tr>
<tr>
<td valign="top"><label for="comment">Ihr Kommentar</label><br></td>
<td><textarea name="comment" id="comment" rows="10" cols="40"></textarea><br></td>
</tr>
<tr>
<td>
</td>
<td><input type="submit" value="Kommentar absenden"></td>
</tr>
</table>
</form>
</div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="javainsel_12_002.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div></td>
<td align="right" width="25%"><div align="right"><a href="javainsel_12_004.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
</table>
</div></td>
<td width="10" valign="top">  </td>
<td width="160" valign="top">
<table border="0" cellpadding="0" cellspacing="0" width="160">
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2">
&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opjiVIV" class="autor">
<strong>Zum Katalog</strong></a>

</td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2">
<img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV">
<img src="common/9783836215060_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Java ist auch eine Insel" title="Zum Katalog: Java ist auch eine Insel">
<br><br><br><br><br><br><strong>Java ist auch eine Insel</strong><br><img src="common/pfeil_rechts5.gif" border="0" alt="">Jetzt bestellen</a><br /><br />
</td>
</tr>
</table>
</td>

</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Ihre Meinung?</strong></a></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">

<table cellspacing="3">
<tr>
<td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br><a href="#kommentar"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
<br><br></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>

<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
</td>
</tr>

<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opjiVIV" class="autor"><strong>Buchempfehlungen</strong></a></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2285?GPP=opjiVIV">
<img src="common/9783836215275_s.gif" width="102" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Computergeschichte(n) – nicht nur für Geeks" title="Zum Katalog: Computergeschichte(n) – nicht nur für Geeks"><br><br><br><br><br><br>&nbsp;Computergeschichte(n)<br>&nbsp;nicht nur für Geeks</a><br><br></td>
</tr>

<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1949?GPP=opjiVIV">
<img src="common/9783836213080_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Java und XML" title="Zum Katalog: Java und XML"><br><br><br><br><br><br><br>&nbsp;Java und XML</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2346?GPP=opjiVIV">
<img src="common/9783836215688_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in Java" title="Zum Katalog: Einstieg in Java"><br><br><br><br><br><br><br>&nbsp;Einstieg<br>&nbsp;in Java</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2051?GPP=opjiVIV">

<img src="common/9783836213677_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in XML" title="Zum Katalog: Einstieg in XML"><br><br><br><br><br><br><br>&nbsp;Einstieg<br>&nbsp;in XML</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2322?GPP=opjiVIV">
<img src="common/9783836215527_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Visual C# 2010" title="Zum Katalog: Visual C# 2010"><br><br><br><br><br><br><br>&nbsp;Visual C# 2010</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2212?GPP=opjiVIV">
<img src="common/9783836214742_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Professionell entwickeln mit Visual C# 2010" title="Zum Katalog: Professionell entwickeln mit Visual C# 2010"><br><br><br><br><br><br><br>&nbsp;Professionell<br>&nbsp;entwickeln mit<br>&nbsp;Visual C# 2010</a><br><br></td>
</tr>

<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2156?GPP=opjiVIV">
<img src="common/9783836214292_s.gif" width="108" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C++ von A bis Z" title="Zum Katalog: C++ von A bis Z"><br><br><br><br><br><br><br>&nbsp;C++ von A bis Z</a><br><br></td>
</tr>
</table></td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>

<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Shopping</strong></span></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opjiVIV"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br><br></td>

</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table><br><br><hr width="70%" align="center">
<div align="center">
<p class="standard"><strong>Copyright © Galileo Press 2011</strong><br>
        Für Ihren privaten Gebrauch dürfen Sie die Online-Version natürlich ausdrucken.
        Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die
        gebundene Ausgabe: Das Werk einschließlich aller seiner Teile ist urheberrechtlich
        geschützt. Alle Rechte vorbehalten einschließlich der Vervielfältigung, Übersetzung,
        Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>
      Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
