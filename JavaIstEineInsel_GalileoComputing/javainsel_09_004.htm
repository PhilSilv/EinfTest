<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: Java ist auch eine Insel – 9.4 Die Spezial-Oberklasse Enum</title>
<meta name="title" content="Galileo Computing :: Java ist auch eine Insel - 9.4 Die Spezial-Oberklasse Enum">
<meta name="author" content="Christian Ullenboom ">
<meta name="publisher" content="Galileo Press 2011">
<meta name="copyright" content="Galileo Press 2011">
<meta name="Description" content="Java ist auch eine Insel - Das umfassende Handbuch – 9.4 Die Spezial-Oberklasse Enum">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href=".htm">
<link rel="next" href=".htm"><script type="text/javascript"><!--
    function OpenWin(url,name,height,width)
    {
      var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
      InfoWin.focus();
    }
    //--></script><link href="common/prettify.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="common/prettify.js"></script></head>
<body vlink="#000099" link="#000099" alink="#000099" onload="prettyPrint()">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
<tr>
<td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook?GPP=opjiVIV"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
<td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opjiVIV"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle Bücher. Auch für Einsteiger." title="Galileo Computing - Professionelle Bücher. Auch für Einsteiger."></a></td>
</tr>
</table>
<div align="right"><a href="http://www.galileocomputing.de/?GPP=opjiVIV" class="navnav">Professionelle Bücher. Auch für Einsteiger.</a></div><br><table class="tbl" border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td width="190" valign="top">
<table class="tbl1" border="0" cellpadding="3" cellspacing="0" width="190" align="left">
<tr>
<td class="tbl2"><a class="nav" href="index.htm#_top">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_00_001.htm#mj58b119301920569a446c9c510503f310">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_01_001.htm#mja8fc5b7ad19fc7332bc66b09a8fda26e">1 Java ist auch eine Sprache</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_02_001.htm#mj313f67c98dc9ecaddfa2d8b80f057fd2">2 Sprachbeschreibung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_03_001.htm#mjcd3b5720e8605484942e3476a1075bdf">3 Klassen und Objekte</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_04_001.htm#mj71fbc84ad33a281b9352b0b19fae2fb2">4 Der Umgang mit Zeichenketten</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_05_001.htm#mj005cd8e604aefc3ae72b92880fcee5c6">5 Eigene Klassen schreiben</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_06_001.htm#mj6f6b47453043c38837bfc32154a97968">6 Exceptions</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_07_001.htm#mjc4a1f6f3499a02fb64fe89046739edca">7 Generics&lt;T&gt;</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_08_001.htm#mj46e914488628367f5dfc0a62c3a78a53">8 Äußere.innere Klassen</a></td>
</tr>
<tr>
<td><a class="navh" href="##mj94af2b90e8a2dad6c1ef67255f89a137">9 Besondere Klassen der Java SE</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_10_001.htm#mjcae20f50ffbc015d0b66861e7087af9b">10 Architektur, Design und angewandte Objektorientierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_11_001.htm#mj60bc6a007ae9b8657949f3e91d96df3d">11 Die Klassenbibliothek</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_12_001.htm#mj0ce00eb41aae2b084534019cf6edc3b6">12 Bits und Bytes und Mathematisches</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_13_001.htm#mj245f5f8d5a858b46462d64e9b9c0786b">13 Datenstrukturen und Algorithmen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_14_001.htm#mj8c6f381221d805dd6fbe480731ac0c58">14 Threads und nebenläufige Programmierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_15_001.htm#mjbe3ed0989722396930966f95deeb2497">15 Raum und Zeit</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_16_001.htm#mj78bd405fb0de0cff099c06255fe36853">16 Dateien, Verzeichnisse und Dateizugriffe</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_17_001.htm#mjb420b02f4ccf65226f7271e48cefa05d">17 Datenströme</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_18_001.htm#mjedab16f1a9cc168eda4a24416359e0b9">18 Die eXtensible Markup Language (XML)</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_19_001.htm#mjc8f47f7f51ac3795c46c4544f391b02e">19 Grafische Oberflächen mit Swing</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_20_001.htm#mj25cc7d47e476b8b1a183a10ee741dbaa">20 Grafikprogrammierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_21_001.htm#mjea7bcdd596c8bd25b078a00221a01a75">21 Netzwerkprogrammierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_22_001.htm#mjde622db61608a627262a27ecb377d675">22 Verteilte Programmierung mit RMI</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_23_001.htm#mj23bf599d65364bcd05d06a34cb5593bf">23 JavaServer Pages und Servlets</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_24_001.htm#mja621f3b4a74c7fa576b4a58b1614041e">24 Datenbankmanagement mit JDBC</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_25_001.htm#mja2e217bf5724cc65eba184a2af8b79cf">25 Reflection und Annotationen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_26_001.htm#mjb47dd6e0a309b7e78cad68f6b5de9319">26 Dienstprogramme für die Java-Umgebung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_27_001.htm#mjf59db36d9280a70e0d3d196e9bf160f5">A Die Begleit-DVD</a></td>
</tr>
<tr>
<td><a class="navnav" href="stichwort.htm#_top">Stichwort</a></td>
</tr>
<tr>
<td><br><a href="http://download2.galileo-press.de/openbook/galileocomputing_javainsel9.zip" class="navnav"><strong>Download:</strong><br>- ZIP, ca. 20,5 MB</a></td>
</tr>
<tr>
<td><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="navnav">Buch bestellen</a></td>
</tr>
<tr>
<td><a class="navnav" href="#kommentar">Ihre Meinung?</a><br><br></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10" alt="Spacer"></td>
<td width="85%" valign="top" align="center"><div align="center">
<table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="javainsel_09_003.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a href="http://www.galileocomputing.de/?GPP=opjiVIV" class="navnav">Galileo Computing /</a><a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opjiVIV" class="navnav"> &lt;openbook&gt; /</a><a href="index.htm" class="navnav"> Java-Insel</a></div></td>
<td align="right" width="25%"><div align="right"><a href="javainsel_09_005.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" valign="top"><table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
<tr>
<td colspan="2"><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="buchtitel">Java ist auch eine Insel</a><span class="autor"> von Christian Ullenboom </span><br><span class="untertitel">Das umfassende Handbuch</span></td>
</tr>
<tr>
<td valign="top" width="211"><dl>
<dt><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="navnav"><img src="common/9783836215060.gif" border="0" alt="Buch: Java ist auch eine Insel" title="Buch: Java ist auch eine Insel"></a></dt>
<dd><br><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV"><span class="autor"><strong>Java ist auch eine Insel</strong><br>geb., mit DVD<br>1482 S., 49,90 Euro<br>Galileo Computing<br>ISBN 978-3-8362-1506-0</span></a></dd>
</dl></td>
<td width="80%"><table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="3" class="kap"><strong><a href="javainsel_09_001.htm#mj94af2b90e8a2dad6c1ef67255f89a137" class="navnav">9 Besondere Klassen der Java SE</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_09_001.htm#mj3ddd02b9666d4fc340fdb6405a0f3616" class="navnav">9.1 Vergleichen von Objekten</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_001.htm#mj8a85f5b5aeb1bcd90175fc9455224490" class="navnav">9.1.1 Natürlich geordnet oder nicht?</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_001.htm#mj0ed1876a49727c1dc4a281f6818e3a95" class="navnav">9.1.2 Die Schnittstelle Comparable</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_001.htm#mjb229dd3e0c549bc7bf8a2503fbedb9dd" class="navnav">9.1.3 Die Schnittstelle Comparator</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_001.htm#mj550f9cf0302921bc2da7e5671447de14" class="navnav">9.1.4 Rückgabewerte kodieren die Ordnung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_09_002.htm#mje37d90c12874f9ae2898ef61d7f21c97" class="navnav">9.2 Wrapper-Klassen und Autoboxing</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_002.htm#mjbe1449b7ae820f093f6d98929e07cf8d" class="navnav">9.2.1 Wrapper-Objekte erzeugen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_002.htm#mjfcc9ccd6b164cb6389e2daa620ee7b42" class="navnav">9.2.2 Konvertierungen in eine String-Repräsentation</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_002.htm#mj987a90501851c20bcde7822857b7ab14" class="navnav">9.2.3 Die Basisklasse Number für numerische Wrapper-Objekte</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_002.htm#mjecf5de0c4d43d2ba0f83dfce865d017e" class="navnav">9.2.4 Vergleiche durchführen mit »compare()«, »compareTo()« und »equals()«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_002.htm#mj28ea7d603270b0dd47fceea971440d70" class="navnav">9.2.5 Die Klasse Integer</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_002.htm#mjee10d7cf5077c4f7a00dafb1b58385f6" class="navnav">9.2.6 Die Klassen Double und Float für Fließkommazahlen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_002.htm#mj3d6f4811d493a0b54aeda9ef7213c8cf" class="navnav">9.2.7 Die Boolean-Klasse</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_002.htm#mj9aaef31dce82a3daebaeb79ea69bfab2" class="navnav">9.2.8 Autoboxing: Boxing und Unboxing</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_09_003.htm#mj2d86e66e54287fd3a7216ef0e9e70a3c" class="navnav">9.3 Object ist die Mutter aller Klassen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_003.htm#mj23d2063caef590e4f07f8dea2ba81ebf" class="navnav">9.3.1 Klassenobjekte</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_003.htm#mjb955c41594d5085cbcc3db2dca6507a1" class="navnav">9.3.2 Objektidentifikation mit »toString()«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_003.htm#mj4c33787451c2460c2eb18623b08278d9" class="navnav">9.3.3 Objektgleichheit mit »equals()« und Identität</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_003.htm#mjf4272fd243c9ca882397f284661c5aad" class="navnav">9.3.4 Klonen eines Objekts mit »clone()« *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_003.htm#mj7fe8f3d9fd296c97017de07898eebccc" class="navnav">9.3.5 Hashcodes über »hashCode()« liefern *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_003.htm#mj719f4e662e9ffafee33ad5d59fdc0dbb" class="navnav">9.3.6 Aufräumen mit »finalize()« *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_003.htm#mjaa2ddfc2bae3f5cf4c8a3427a2ed1555" class="navnav">9.3.7 Synchronisation *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="#mj2f6d324dfd3b9293fe6312045c460ad3" class="navh">9.4 Die Spezial-Oberklasse Enum</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mjb51623ea831884c57b143981630b06fb" class="navh">9.4.1 Methoden auf Enum-Objekten</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj83148487d9d7e07f7a117a0a6b4be8c5" class="navh">9.4.2 »Enum« mit eigenen Konstruktoren und Methoden *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_09_005.htm#mjaedac022d8feb8adeb6b664e81d2e969" class="navnav">9.5 Erweitertes »for« und »Iterable«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_005.htm#mjfc718ed8a1956898dc6f70e8ed9ca1ad" class="navnav">9.5.1 Die Schnittstelle »Iterable«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_09_005.htm#mj71228677e0dcf9d6abaa2b5a84e78c15" class="navnav">9.5.2 Einen eigenen Iterable implementieren *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_09_006.htm#mj9a703099ff8a171b1423262b0e4a6d45" class="navnav">9.6 Zum Weiterlesen</a></strong></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td><div class="main"><a id="mj2f6d324dfd3b9293fe6312045c460ad3" name="mj2f6d324dfd3b9293fe6312045c460ad3"></a><a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2"><span class="cfett">9.4</span> Die Spezial-Oberklasse Enum  <a href="#t2t32"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></h2>
<p>Jedes Aufzählungsobjekt erbt von der Spezialklasse <span class="clisting">Enum</span>. Nehmen wir erneut die Wochentage:</p>
<p class="tabunter"><strong>Listing 9.21    </strong>com/tutego/insel/enumeration/Weekday.java, Weekday</p>
<div class="listing"><pre class="prettyprint">public enum Weekday
{
  MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY
}</pre></div>
<p>Der Compiler übersetzt dies in eine Klasse, die etwa so aussieht:</p>
<div class="listing"><pre class="prettyprint">class Weekday extends Enum
{
  public static final Weekday MONDAY  = new Weekday( "MONDAY",   0 );
  public static final Weekday TUESDAY = new Weekday( "TUESDAY ", 1 );
  // weitere Konstanten ...

  private Weekday( String s, int i )
  {
    super( s, i );
  }

  // weitere Methoden ...
}</pre></div><a id="mjb51623ea831884c57b143981630b06fb" name="mjb51623ea831884c57b143981630b06fb"></a><a name="t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t32"></a><h3 class="t3"><span class="cfett">9.4.1</span> Methoden auf Enum-Objekten  <a href="#t2t33"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t31"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Jedes <span class="clisting">Enum</span>-Objekt besitzt automatisch einige Standardmethoden, die von der Oberklasse <span class="clisting">java.lang.Enum</span> kommen. Das sind zum einen überschriebene Methoden aus <span class="clisting">java.lang.Object</span>, einige neue Objektmethoden und einige statische Methoden.</p>
<div class="bildbox">
<p><a name="IDAZGWD"></a><a onClick="OpenWin('bilder/enumuml.gif','Abbildung',800,800)"><img border="0" src="bilderklein/kleinenumuml.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<h4 class="t4">String-Repräsentation</h4>
<p>Jedes <span class="clisting">Enum</span>-Objekt liefert über die Methode <span class="clisting">name()</span> den Namen der Konstante. Dazu gesellt sich die bekannte <span class="clisting">toString()</span>-Methode, die standardmäßig <span class="clisting">name()</span> aufruft, aber überschrieben werden kann. Die Methode <span class="clisting">name()</span> lässt sich nicht überschreiben.</p>
<p>Eine vom Compiler generierte <span class="clisting">Enum</span>-Klasse bietet eine statische <span class="clisting">valueOf(String)</span>-Methode, die das <span class="clisting">Enum</span>-Objekt liefert, das zur <span class="clisting">name()</span>-Repräsentation passt. Wird bei <span class="clisting">valueOf()</span> ein String übergeben, zu dem es kein <span class="clisting">Enum</span> gibt, folgt eine <span class="clisting">IllegalArgumentException</span>. Dazu kommt eine weitere statische Methode, die jedoch selbst schon in der Klasse <span class="clisting">Enum</span> deklariert wird (die Basisklasse der vom Compiler erzeugten <span class="clisting">Enum</span>-Klassen): <span class="clisting">Enum.valueOf(Class&lt;T&gt; enumType, String s)</span>.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Beispiel   </span>Die Konvertierung in den String und vom String in das entsprechende <span class="clisting">Enum</span>-Objekt:</p>
<div class="listing"><pre class="prettyprint">System.out.println( Weekday.MONDAY.<span class="cfett">toString()</span> );                      // MONDAY
System.out.println( Weekday.MONDAY.<span class="cfett">name()</span> );                          // MONDAY
System.out.println( Weekday.<span class="cfett">valueOf( "MONDAY" )</span>.name() );             // MONDAY
System.out.println( <span class="cfett">Enum.valueOf( Weekday.class, "MONDAY" )</span>.name() ); // MONDAY</pre></div>
</td>
</tr>
</table><br><p>Der Unterschied zu den <span class="clisting">valueOf()</span>-Methoden ist wichtig: Während es <span class="clisting">Enum.valueOf(Class, String)</span> nur einmal gibt, existieren statische <span class="clisting">valueOf(String)</span>-Methoden einmal in jeder vom Compiler generierten Aufzählungsklasse. Da die Methode also compilergeneriert ist, taucht sie in der folgenden Aufzählung nicht auf.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">abstract class<span class="cfett"> Enum</span>&lt;E extends Enum&lt;E&gt;&gt;
implements Comparable&lt;E&gt;, Serializable</pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">final String name()</span>
Liefert den Namen der Konstanten. Da die Methode &#8211; wie viele andere der Klasse &#8211; final ist, lässt sich der Name nicht ändern.</li>
</ul>
<ul class="gp">
<li><span class="clisting">String toString()</span>
Liefert den Namen der Konstanten. Die Methode ruft standardisiert <span class="clisting">name()</span> auf, weil sie aber nicht final ist, kann sie überschrieben werden.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static &lt;T extends Enum&lt;T&gt;&gt; T valueOf( Class&lt;T&gt; enumType, String s )</span>
Ermöglicht das Suchen von <span class="clisting">Enum</span>-Objekten zu einem Konstantennamen und einer <span class="clisting">Enum</span>-Klasse. Sie liefert das <span class="clisting">Enum</span>-Objekt für die gegebene Zeichenfolge oder löst eine <span class="clisting">Illegal-ArgumentException</span> aus, wenn dem String kein <span class="clisting">Enum</span>-Objekt zuzuordnen ist.</li>
</ul>
<h4 class="t4">Alle Konstanten der Klasse aufzählen</h4>
<p>Eine praktische statische Methode ist <span class="clisting">values()</span>. Sie liefert ein Feld von <span class="clisting">Enum</span>-Objekten. Nützlich ist das für das erweiterte <span class="clisting">for</span>, das alle Konstanten aufzählen soll. Eine Alternative mit dem gleichen Ergebnis ist die <span class="clisting">Class</span>-Methode <span class="clisting">getEnumConstants()</span>:</p>
<p class="tabunter"><strong>Listing 9.22    </strong>com/tutego/insel/enumeration/WeekdayDemo.java, Ausschnitt main()</p>
<div class="listing"><pre class="prettyprint">for ( Weekday day : Weekday.values() )  // oder Weekday.class.getEnumConstants()
  System.out.println( "Name=" + day.name() );</pre></div>
<p>Liefert Zeilen mit <span class="clisting">Name=MONDAY</span>, …</p>
<h4 class="t4">Ordinalzahl</h4>
<p>Von der Oberklasse <span class="clisting">Enum</span> erbt jede Aufzählung einen geschützten parametrisierten Konstruktor, der den Namen der Konstanten sowie einen assoziierten Zähler erwartet. So wird aus jedem Element der Aufzählung ein Objekt vom Basistyp <span class="clisting">Enum</span>, das einen Namen und eine ID, die so genannte <span class="ckursiv">Ordinalzahl</span><span class="ckursiv">,</span> speichert. Natürlich kann es auch nach seinem Namen und Zähler gefragt werden.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Beispiel   </span>Eine Methode, die die Ordinalzahl eines Elements der Aufzählung liefert oder
&#8211;1, wenn die Konstante nicht existiert:</p>
<p class="tabunter"><strong>Listing 9.23    </strong>com/tutego/insel/enumeration/WeekdayDemo.java, getOrdinal()</p>
<div class="listing"><pre class="prettyprint">static int getOrdinal( String name )
{
  try {
    return <span class="cfett">Weekday.valueOf( name ).ordinal()</span>;
  }
  catch ( IllegalArgumentException e ) {
    return &#8211;1;
  }
}</pre></div>
<p class="BStandard">Damit liefert unser <span class="clisting">getOrdinal("MONDAY") == 0</span> und <span class="clisting">getOrdinal("FEIERTAG") == &#8211;1</span>.</p>
</td>
</tr>
</table><br><p>Die Ordinalzahl gibt die Position in der Deklaration an und ist auch Ordnungskriterium der <span class="clisting">compareTo()</span>-Methode. Die Ordinalzahl lässt sich nicht ändern und repräsentiert immer die Reihenfolge der deklarieren Konstanten.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Beispiel   </span>Kommt Montag wirklich vor Freitag?</p>
<div class="listing"><pre class="prettyprint">System.out.println( Weekday.MONDAY.<span class="cfett">compareTo</span>( Weekday.FRIDAY ) ); // &#8211;4
System.out.println( Weekday.MONDAY.<span class="cfett">compareTo</span>( Weekday.MONDAY ) ); //  0
System.out.println( Weekday.FRIDAY.<span class="cfett">compareTo</span>( Weekday.MONDAY) );  //  4</pre></div>
<p class="BStandard">Negative Rückgaben bei <span class="clisting">compareTo()</span> geben immer an, dass das erste Objekt »kleiner« als das zweite aus dem Argument ist.</p>
</td>
</tr>
</table><br><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">abstract class<span class="cfett"> Enum</span>&lt;E extends Enum&lt;E&gt;&gt;
implements Comparable&lt;E&gt;, Serializable</pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">final int ordinal()</span>
Liefert die zur Konstante gehörige ID. Im Allgemeinen ist diese Ordinalzahl nicht wichtig, aber besondere Datenstrukturen wie <span class="clisting">EnumSet</span> oder <span class="clisting">EnumMap</span> nutzen diese eindeutige ID. Die Reihenfolge der Zahlen ist durch die Reihenfolge der Angabe gegeben.</li>
</ul>
<ul class="gp">
<li><span class="clisting">public final boolean equals( Object other )</span>
Die Oberklasse <span class="clisting">Enum</span> überschreibt <span class="clisting">equals()</span> mit der Logik wie in <span class="clisting">Object</span> &#8211; also den Vergleich der Referenzen &#8211;, um sie als <span class="clisting">final</span> zu markieren.</li>
</ul>
<ul class="gp">
<li><span class="clisting">protected final Object clone() throws CloneNotSupportedException</span>
Die Methode <span class="clisting">clone()</span> ist <span class="clisting">final protected</span> und kann also weder überschrieben noch von außen aufgerufen werden. So kann es keine Kopien der <span class="clisting">Enum</span>-Objekte geben, die die Identität gefährden könnten. Grundsätzlich ist es aber erlaubt, wenn eigene Implementierungen von <span class="clisting">clone()</span> die <span class="clisting">this</span>-Referenz liefern.</li>
</ul>
<ul class="gp">
<li><span class="clisting">final int compareTo( E o )</span>
Da die <span class="clisting">Enum</span>-Klasse die Schnittstelle <span class="clisting">Comparable</span> implementiert, gibt es auch die Methode <span class="clisting">compareTo()</span>. Sie vergleicht anhand der Ordinalzahlen. Vergleiche sind nur innerhalb eines <span class="clisting">Enum</span>-Typs erlaubt.</li>
</ul>
<ul class="gp">
<li><span class="clisting">final Class&lt;E&gt; getDeclaringClass()</span>
Liefert das <span class="clisting">Class</span>-Objekt zu einem konkreten <span class="clisting">Enum</span>.</li>
</ul><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Hinweis   </span>Die Methode <span class="clisting">getDeclaringClass()</span> liefert auf der Aufzählungsklasse selbst <span class="clisting">null</span> und nur auf den Elementen der Aufzählung einen sinnvollen Wert:</p>
<div class="listing"><pre class="prettyprint">System.out.println( Weekday.class.getDeclaringClass() );  // null
System.out.println( Weekday.MONDAY.getDeclaringClass() ); // class com.tutego.weekday.Weekday</pre></div>
</td>
</tr>
</table><br><a id="mj83148487d9d7e07f7a117a0a6b4be8c5" name="mj83148487d9d7e07f7a117a0a6b4be8c5"></a><a name="t32"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t33"></a><h3 class="t3"><span class="cfett">9.4.2</span> »Enum« mit eigenen Konstruktoren und Methoden *  <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><a href="#t2t32"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Da eine <span class="clisting">enum</span>-Klasse mit der Klassendeklaration verwandt ist, kann sie ebenso Attribute und Methoden deklarieren. Geben wir einer Aufzählung <span class="clisting">Country</span> eine Methode, die den ISO-3166-2-Landescode des jeweiligen Aufzählungselements liefert:</p>
<p class="tabunter"><strong>Listing 9.24    </strong>com/tutego/insel/enumeration/Country.java, Country</p>
<div class="listing"><pre class="prettyprint">public enum Country
{
  GERMANY, UK, CHINA;

 <span class="cfett"> public String getISO3Country()</span>
  {
    if ( this == GERMANY )
      return Locale.GERMANY.getISO3Country();
    else if ( this == UK )
      return Locale.UK.getISO3Country();
    return Locale.CHINA.getISO3Country();
  }
}</pre></div>
<p>Die Methode <span class="clisting">getISO3Country()</span> kann nun auf den <span class="clisting">Enum</span>-Objekten aufgerufen werden:</p>
<div class="listing"><pre class="prettyprint">System.out.println( Country.CHINA.getISO3Country() ); // CHN</pre></div>
<p>Da <span class="clisting">switch</span> auf <span class="clisting">enum</span> erlaubt ist, können wir schreiben:</p>
<p class="tabunter"><strong>Listing 9.25    </strong>CountryEnumDemo.java, Ausschnitt</p>
<div class="listing"><pre class="prettyprint">Country c = Country.GERMANY;

switch ( c )
{
  case GERMANY:
    System.out.println( "Aha. Ein Krauti" );         // Aha. Ein Krauti
    System.out.println( meinLand.getISO3Country() ); // DEU
    break;
  default:      System.out.println( "Anderes Land" );
}</pre></div>
<h4 class="t4">»Enum« mit Konstruktoren</h4>
<p>Neben dieser Variante wollen wir eine zweite Implementierung nutzen und nun Konstruktoren hinzuziehen, um das gleiche Problem auf andere Weise zu lösen:</p>
<p class="tabunter"><strong>Listing 9.26    </strong>com/tutego/insel/enumeration/Country.java, Country</p>
<div class="listing"><pre class="prettyprint">public enum Country
{
 <span class="cfett"> GERMANY( Locale.GERMANY ), UK( Locale.UK ), CHINA( Locale.CHINA );
</span><span class="clisting">
  private Locale country;</span><span class="cfett">

  private Country( Locale country )</span>
 <span class="cfett"> {</span>
   <span class="cfett"> this.country = country;</span>
 <span class="cfett"> }
</span><span class="clisting">
  public String getISO3Country()
  {
    return country.getISO3Country();
  }
}</span></pre></div>
<p>Bei der Deklaration der Konstanten wird in runden Klammern ein Argument für den Konstruktor übergeben. Der Konstruktor speichert das zugehörige <span class="clisting">Locale</span>-Objekt in der internen Variablen <span class="clisting">country</span>, auf die dann <span class="clisting">getISO3Country()</span> Bezug nimmt.</p>
<h4 class="t4">»Enum« mit überschriebenen Methoden</h4>
<p>In dem <span class="clisting">Enum</span>-Typ lassen sich nicht nur Methoden hinzufügen, sondern auch Methoden überschreiben. Beginnen wir mit einer lokalisierten und überladenen Methode <span class="clisting">toString()</span>:</p>
<p class="tabunter"><strong>Listing 9.27    </strong>com/tutego/insel/enumeration/WeekdayInternational.java, WeekdayInternational</p>
<div class="listing"><pre class="prettyprint">public enum WeekdayInternational
{
  SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY;

 <span class="cfett"> @Override</span>
 <span class="cfett"> public String toString()</span>
  {
    return new SimpleDateFormat().getDateFormatSymbols().getWeekdays()[ 
    ordinal() + 1 ];
  }

 <span class="cfett"> public String toString( Locale l )</span>
  {
    return new SimpleDateFormat("", l).getDateFormatSymbols().getWeekdays()[ 
    ordinal() + 1 ];
  }
}</pre></div>
<p>Die erste Methode ist aus unserer Oberklasse <span class="clisting">Object</span> überschrieben, die zweite als überladene Methode hinzugefügt. Ein Beispiel macht den Aufruf und die Funktionsweise klar:</p>
<p class="tabunter"><strong>Listing 9.28    </strong>com/tutego/insel/enumeration/WeekdayInternationalDemo.java, main()</p>
<div class="listing"><pre class="prettyprint">System.out.println( WeekdayInternational.SATURDAY );                         // Samstag
System.out.println( WeekdayInternational.SATURDAY.toString() );              // Samstag
System.out.println( WeekdayInternational.SATURDAY.toString(Locale.FRANCE) ); // samedi
System.out.println( WeekdayInternational.SATURDAY.toString(Locale.ITALY) );  // sabato</pre></div>
<p>An dieser Stelle hören die Möglichkeiten der <span class="clisting">Enum</span>-Syntax aber noch nicht auf. Ähnlich wie die Syntax von inneren anonymen Klassen, die es erlauben, Methoden zu überschreiben, bieten Aufzählungstypen eine vergleichbare Syntax, um gezielt Methoden für eine spezielle Konstante zu überschreiben.</p>
<p>Nehmen wir an, in einem Spiel gibt es eine eigene Währung, den Ponro Dollar. Nun soll dieser aber mit einer Referenzwährung, dem Euro, in Beziehung gesetzt werden; der Wechselkurs ist einfach 1:2:</p>
<p class="tabunter"><strong>Listing 9.29    </strong>com/tutego/insel/enumeration/GameCurrency.java, GameCurrency</p>
<div class="listing"><pre class="prettyprint">public enum GameCurrency
{
  EURO()<span class="cfett"> {</span>
   <span class="cfett"> @Override double convertTo( GameCurrency targetCurrency, double value )</span>
   <span class="cfett"> {</span>
     <span class="cfett"> return targetCurrency == EURO ? value : value / 2;</span>
   <span class="cfett"> }</span>
 <span class="cfett"> }</span>,
  PONRODOLLAR()<span class="cfett"> {</span>
   <span class="cfett"> @Override double convertTo( GameCurrency targetCurrency, double value )</span>
   <span class="cfett"> {</span>
     <span class="cfett"> return targetCurrency == PONRODOLLAR ? value : value * 2;</span>
   <span class="cfett"> }</span>
 <span class="cfett"> }</span>;

 <span class="cfett"> abstract double convertTo( GameCurrency targetCurrency, double value );</span>
}</pre></div>
<p>Der interessante Teil ist die Deklaration der abstrakten <span class="clisting">convertTo()</span>-Methode und die Implementierung lokal bei den einzelnen Konstanten. (Natürlich müssen wir nicht jede Methode im <span class="clisting">Enum</span> abstrakt machen, sondern sie kann auch konkret sein. Dann muss nicht jedes <span class="clisting">Enum</span>-Element die abstrakte Methode implementieren.)</p>
<p>Mit einem statischen Import für die Aufzählung lässt sich die Nutzung und Funktionalität schnell zeigen:</p>
<p class="tabunter"><strong>Listing 9.30    </strong>com/tutego/insel/enumeration/GameCurrencyDemo.java, main()</p>
<div class="listing"><pre class="prettyprint">System.out.println(<span class="cfett"> EURO.convertTo( EURO, 12 )</span> );               // 12.0
System.out.println(<span class="cfett"> EURO.convertTo( PONRODOLLAR, 12 )</span> );        // 6.0
System.out.println(<span class="cfett"> PONRODOLLAR.convertTo( EURO, 12 )</span> );        // 24.0
System.out.println(<span class="cfett"> PONRODOLLAR.convertTo( PONRODOLLAR, 12 )</span> ); // 12.0</pre></div><br><hr><a name="kommentar"></a><h3>Ihr Kommentar</h3>
                       Wie hat Ihnen das &lt;openbook&gt; gefallen? Wir freuen uns immer über Ihre freundlichen und kritischen Rückmeldungen.
                       <form action="http://www.galileo-press.de/feedback/openbook" method="post" style="text-align: center; margin-top: 10px;"><input type="hidden" name="openbookurl" value="javainsel9/.htm"><input type="hidden" name="buchtitel" value="Java ist auch eine Insel"><input type="hidden" name="Kapitel" value="9.4 Die Spezial-Oberklasse Enum"><table border="0">
<tr>
<td><label for="name">Name</label><br></td>
<td><input type="text" name="name" id="name" size="40"><br></td>
</tr>
<tr>
<td><label for="email">E-Mail</label><br></td>
<td><input type="text" name="email" id="email" size="40"><br></td>
</tr>
<tr>
<td valign="top"><label for="comment">Ihr Kommentar</label><br></td>
<td><textarea name="comment" id="comment" rows="10" cols="40"></textarea><br></td>
</tr>
<tr>
<td>
</td>
<td><input type="submit" value="Kommentar absenden"></td>
</tr>
</table>
</form>
</div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="javainsel_09_003.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div></td>
<td align="right" width="25%"><div align="right"><a href="javainsel_09_005.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
</table>
</div></td>
<td width="10" valign="top">  </td>
<td width="160" valign="top">
<table border="0" cellpadding="0" cellspacing="0" width="160">
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2">
&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opjiVIV" class="autor">
<strong>Zum Katalog</strong></a>

</td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2">
<img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV">
<img src="common/9783836215060_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Java ist auch eine Insel" title="Zum Katalog: Java ist auch eine Insel">
<br><br><br><br><br><br><strong>Java ist auch eine Insel</strong><br><img src="common/pfeil_rechts5.gif" border="0" alt="">Jetzt bestellen</a><br /><br />
</td>
</tr>
</table>
</td>

</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Ihre Meinung?</strong></a></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">

<table cellspacing="3">
<tr>
<td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br><a href="#kommentar"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
<br><br></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>

<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
</td>
</tr>

<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opjiVIV" class="autor"><strong>Buchempfehlungen</strong></a></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2285?GPP=opjiVIV">
<img src="common/9783836215275_s.gif" width="102" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Computergeschichte(n) – nicht nur für Geeks" title="Zum Katalog: Computergeschichte(n) – nicht nur für Geeks"><br><br><br><br><br><br>&nbsp;Computergeschichte(n)<br>&nbsp;nicht nur für Geeks</a><br><br></td>
</tr>

<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1949?GPP=opjiVIV">
<img src="common/9783836213080_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Java und XML" title="Zum Katalog: Java und XML"><br><br><br><br><br><br><br>&nbsp;Java und XML</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2346?GPP=opjiVIV">
<img src="common/9783836215688_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in Java" title="Zum Katalog: Einstieg in Java"><br><br><br><br><br><br><br>&nbsp;Einstieg<br>&nbsp;in Java</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2051?GPP=opjiVIV">

<img src="common/9783836213677_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in XML" title="Zum Katalog: Einstieg in XML"><br><br><br><br><br><br><br>&nbsp;Einstieg<br>&nbsp;in XML</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2322?GPP=opjiVIV">
<img src="common/9783836215527_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Visual C# 2010" title="Zum Katalog: Visual C# 2010"><br><br><br><br><br><br><br>&nbsp;Visual C# 2010</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2212?GPP=opjiVIV">
<img src="common/9783836214742_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Professionell entwickeln mit Visual C# 2010" title="Zum Katalog: Professionell entwickeln mit Visual C# 2010"><br><br><br><br><br><br><br>&nbsp;Professionell<br>&nbsp;entwickeln mit<br>&nbsp;Visual C# 2010</a><br><br></td>
</tr>

<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2156?GPP=opjiVIV">
<img src="common/9783836214292_s.gif" width="108" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C++ von A bis Z" title="Zum Katalog: C++ von A bis Z"><br><br><br><br><br><br><br>&nbsp;C++ von A bis Z</a><br><br></td>
</tr>
</table></td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>

<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Shopping</strong></span></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opjiVIV"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br><br></td>

</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table><br><br><hr width="70%" align="center">
<div align="center">
<p class="standard"><strong>Copyright © Galileo Press 2011</strong><br>
        Für Ihren privaten Gebrauch dürfen Sie die Online-Version natürlich ausdrucken.
        Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die
        gebundene Ausgabe: Das Werk einschließlich aller seiner Teile ist urheberrechtlich
        geschützt. Alle Rechte vorbehalten einschließlich der Vervielfältigung, Übersetzung,
        Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>
      Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
