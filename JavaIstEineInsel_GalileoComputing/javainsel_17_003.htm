<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: Java ist auch eine Insel – 17.3 Formatierte Textausgaben</title>
<meta name="title" content="Galileo Computing :: Java ist auch eine Insel - 17.3 Formatierte Textausgaben">
<meta name="author" content="Christian Ullenboom ">
<meta name="publisher" content="Galileo Press 2011">
<meta name="copyright" content="Galileo Press 2011">
<meta name="Description" content="Java ist auch eine Insel - Das umfassende Handbuch – 17.3 Formatierte Textausgaben">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href=".htm">
<link rel="next" href=".htm"><script type="text/javascript"><!--
    function OpenWin(url,name,height,width)
    {
      var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
      InfoWin.focus();
    }
    //--></script><link href="common/prettify.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="common/prettify.js"></script></head>
<body vlink="#000099" link="#000099" alink="#000099" onload="prettyPrint()">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
<tr>
<td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook?GPP=opjiVIV"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
<td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opjiVIV"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle Bücher. Auch für Einsteiger." title="Galileo Computing - Professionelle Bücher. Auch für Einsteiger."></a></td>
</tr>
</table>
<div align="right"><a href="http://www.galileocomputing.de/?GPP=opjiVIV" class="navnav">Professionelle Bücher. Auch für Einsteiger.</a></div><br><table class="tbl" border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td width="190" valign="top">
<table class="tbl1" border="0" cellpadding="3" cellspacing="0" width="190" align="left">
<tr>
<td class="tbl2"><a class="nav" href="index.htm#_top">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_00_001.htm#mj58b119301920569a446c9c510503f310">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_01_001.htm#mja8fc5b7ad19fc7332bc66b09a8fda26e">1 Java ist auch eine Sprache</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_02_001.htm#mj313f67c98dc9ecaddfa2d8b80f057fd2">2 Sprachbeschreibung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_03_001.htm#mjcd3b5720e8605484942e3476a1075bdf">3 Klassen und Objekte</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_04_001.htm#mj71fbc84ad33a281b9352b0b19fae2fb2">4 Der Umgang mit Zeichenketten</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_05_001.htm#mj005cd8e604aefc3ae72b92880fcee5c6">5 Eigene Klassen schreiben</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_06_001.htm#mj6f6b47453043c38837bfc32154a97968">6 Exceptions</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_07_001.htm#mjc4a1f6f3499a02fb64fe89046739edca">7 Generics&lt;T&gt;</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_08_001.htm#mj46e914488628367f5dfc0a62c3a78a53">8 Äußere.innere Klassen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_09_001.htm#mj94af2b90e8a2dad6c1ef67255f89a137">9 Besondere Klassen der Java SE</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_10_001.htm#mjcae20f50ffbc015d0b66861e7087af9b">10 Architektur, Design und angewandte Objektorientierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_11_001.htm#mj60bc6a007ae9b8657949f3e91d96df3d">11 Die Klassenbibliothek</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_12_001.htm#mj0ce00eb41aae2b084534019cf6edc3b6">12 Bits und Bytes und Mathematisches</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_13_001.htm#mj245f5f8d5a858b46462d64e9b9c0786b">13 Datenstrukturen und Algorithmen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_14_001.htm#mj8c6f381221d805dd6fbe480731ac0c58">14 Threads und nebenläufige Programmierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_15_001.htm#mjbe3ed0989722396930966f95deeb2497">15 Raum und Zeit</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_16_001.htm#mj78bd405fb0de0cff099c06255fe36853">16 Dateien, Verzeichnisse und Dateizugriffe</a></td>
</tr>
<tr>
<td><a class="navh" href="javainsel_17_001.htm#mjb420b02f4ccf65226f7271e48cefa05d">17 Datenströme</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_18_001.htm#mjedab16f1a9cc168eda4a24416359e0b9">18 Die eXtensible Markup Language (XML)</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_19_001.htm#mjc8f47f7f51ac3795c46c4544f391b02e">19 Grafische Oberflächen mit Swing</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_20_001.htm#mj25cc7d47e476b8b1a183a10ee741dbaa">20 Grafikprogrammierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_21_001.htm#mjea7bcdd596c8bd25b078a00221a01a75">21 Netzwerkprogrammierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_22_001.htm#mjde622db61608a627262a27ecb377d675">22 Verteilte Programmierung mit RMI</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_23_001.htm#mj23bf599d65364bcd05d06a34cb5593bf">23 JavaServer Pages und Servlets</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_24_001.htm#mja621f3b4a74c7fa576b4a58b1614041e">24 Datenbankmanagement mit JDBC</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_25_001.htm#mja2e217bf5724cc65eba184a2af8b79cf">25 Reflection und Annotationen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_26_001.htm#mjb47dd6e0a309b7e78cad68f6b5de9319">26 Dienstprogramme für die Java-Umgebung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_27_001.htm#mjf59db36d9280a70e0d3d196e9bf160f5">A Die Begleit-DVD</a></td>
</tr>
<tr>
<td><a class="navnav" href="stichwort.htm#_top">Stichwort</a></td>
</tr>
<tr>
<td><br><a href="http://download2.galileo-press.de/openbook/galileocomputing_javainsel9.zip" class="navnav"><strong>Download:</strong><br>- ZIP, ca. 20,5 MB</a></td>
</tr>
<tr>
<td><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="navnav">Buch bestellen</a></td>
</tr>
<tr>
<td><a class="navnav" href="#kommentar">Ihre Meinung?</a><br><br></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10" alt="Spacer"></td>
<td width="85%" valign="top" align="center"><div align="center">
<table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="javainsel_17_002.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a href="http://www.galileocomputing.de/?GPP=opjiVIV" class="navnav">Galileo Computing /</a><a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opjiVIV" class="navnav"> &lt;openbook&gt; /</a><a href="index.htm" class="navnav"> Java-Insel</a></div></td>
<td align="right" width="25%"><div align="right"><a href="javainsel_17_004.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" valign="top"><table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
<tr>
<td colspan="2"><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="buchtitel">Java ist auch eine Insel</a><span class="autor"> von Christian Ullenboom </span><br><span class="untertitel">Das umfassende Handbuch</span></td>
</tr>
<tr>
<td valign="top" width="211"><dl>
<dt><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="navnav"><img src="common/9783836215060.gif" border="0" alt="Buch: Java ist auch eine Insel" title="Buch: Java ist auch eine Insel"></a></dt>
<dd><br><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV"><span class="autor"><strong>Java ist auch eine Insel</strong><br>geb., mit DVD<br>1482 S., 49,90 Euro<br>Galileo Computing<br>ISBN 978-3-8362-1506-0</span></a></dd>
</dl></td>
<td width="80%"><table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="3" class="kap"><strong><a href="javainsel_17_001.htm#mjb420b02f4ccf65226f7271e48cefa05d" class="navnav">17 Datenströme</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_001.htm#mj7a324cf69fbedec30392b88f514c1531" class="navnav">17.1 Stream-Klassen und Reader/Writer am Beispiel von Dateien</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_001.htm#mj87f7ea8c7b8051417049399df2c5782a" class="navnav">17.1.1 Mit dem FileWriter Texte in Dateien schreiben</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_001.htm#mj5716136ecff252fbd4596261b9080831" class="navnav">17.1.2 Zeichen mit der Klasse »FileReader« lesen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_001.htm#mjb01e1a0c69c28aad4f4d7eeee1de357d" class="navnav">17.1.3 Kopieren mit »FileOutputStream« und »FileInputStream«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_001.htm#mjbdc9ce90e6d512ae0291a2ed6232d72a" class="navnav">17.1.4 Das FileDescriptor-Objekt *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_002.htm#mj9a4cc18f2e2c6f801a5cc621aa15984f" class="navnav">17.2 Basisklassen für die Ein-/Ausgabe</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mj203b54d682c73aada147e1b57c01662f" class="navnav">17.2.1 Die abstrakten Basisklassen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mj7a1dda9729bd603bcadebc990609f10f" class="navnav">17.2.2 Übersicht über Ein-/Ausgabeklassen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mjd34b697cdf6ea75732127f6a06fc88b0" class="navnav">17.2.3 Die abstrakte Basisklasse »OutputStream«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mj2202e460fa14e6ecb6820f4ef86a77f8" class="navnav">17.2.4 Die Schnittstellen »Closeable« und »Flushable«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mj25199db178b60bddb59bd9defea22c22" class="navnav">17.2.5 Ein Datenschlucker *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mj534fca11b85556e6eec99b4fdd7a4553" class="navnav">17.2.6 Die abstrakte Basisklasse »InputStream«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mjc2905c008847dad671feaa7501f0d82f" class="navnav">17.2.7 Ressourcen aus dem Klassenpfad und aus Jar–Archiven laden</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mj8c65b2939c83b858ed311032513e29b4" class="navnav">17.2.8 Ströme mit SequenceInputStream zusammensetzen *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mjb3889bbefb776f81c16212ee860a5b81" class="navnav">17.2.9 Die abstrakte Basisklasse »Writer«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mj8bdb238857679cf8eede58d00850de6b" class="navnav">17.2.10 Die Schnittstelle »Appendable« *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_002.htm#mj923c62d6bac3e8a5c5b75c58df0b0bd3" class="navnav">17.2.11 Die abstrakte Basisklasse »Reader«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="#mjb6060f6cd569b28d5768b131b007f8c8" class="navh">17.3 Formatierte Textausgaben</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj3573ae904c53fd07e28b8d6dc4973fc8" class="navh">17.3.1 Die Klassen »PrintWriter« und »PrintStream«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mjc6e7c16fc76cbc87e02a674ecb288cbf" class="navh">17.3.2 »System.out«, »System.err« und »System.in«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_004.htm#mj52686ccc039a7d0b9fdf13da77f25534" class="navnav">17.4 Schreiben und Lesen aus Strings und Byte-Feldern</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_004.htm#mj97a3eda7509a5b9a017d7b03763042ee" class="navnav">17.4.1 Mit dem »StringWriter« ein String-Objekt füllen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_004.htm#mj94b85a8029a72b2ead03272e22027344" class="navnav">17.4.2 CharArrayWriter</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_004.htm#mj1fbd4214555249440ffa5a256c369d52" class="navnav">17.4.3 »StringReader« und »CharArrayReader«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_004.htm#mjb453ad9336694734eec75f9d0145cc03" class="navnav">17.4.4 Mit »ByteArrayOutputStream« in ein Byte-Feld schreiben</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_004.htm#mje1eff635da76d0cbd2c4c316ee940cfb" class="navnav">17.4.5 Mit »ByteArrayInputStream« aus einem Byte-Feld lesen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_005.htm#mjafc99f810e12c276ba2a4b6fc3c009c3" class="navnav">17.5 Datenströme filtern und verketten</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mj4466c357c7508a8eb1ceaaaa7a22f5ed" class="navnav">17.5.1 Streams als Filter verketten (verschalen)</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mj3a1085565ee3f519c058eb06e024f57a" class="navnav">17.5.2 Gepufferte Ausgaben mit »BufferedWriter«/»BufferedOutputStream«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mjd7529c220ef65a0b793a27365ea5de14" class="navnav">17.5.3 Gepufferte Eingaben mit »BufferedReader«/»BufferedInputStream«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mj019dc3443d19cfbdda730582336dc29d" class="navnav">17.5.4 »LineNumberReader« zählt automatisch Zeilen mit *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mj46d4c0c0873fbee2cbb4dbbf6aacfb92" class="navnav">17.5.5 Daten mit der Klasse »PushbackReader« zurücklegen *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mjeee25cb2d512bd9c6098a285327bb9de" class="navnav">17.5.6 DataOutputStream/DataInputStream *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mj5ca3c8f350c3026418585f4f6765a4a7" class="navnav">17.5.7 Basisklassen für Filter *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mj9f0672d3026eda914c090ee852a9042f" class="navnav">17.5.8 Die Basisklasse »FilterWriter« *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mjcf7a24a8d32eab395c95b5a1a055ee61" class="navnav">17.5.9 Ein LowerCaseWriter *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mj4744fe492703c6ebebb6a59fc1ecab41" class="navnav">17.5.10 Eingaben mit der Klasse »FilterReader« filtern *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_005.htm#mjbb86eafceec41ba0b8b469e325491f65" class="navnav">17.5.11 Anwendungen für »FilterReader« und »FilterWriter« *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_006.htm#mj23b9709abc382e2f5711eb2fa2afe62a" class="navnav">17.6 Vermittler zwischen Byte-Streams und Unicode-Strömen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_006.htm#mj3d46af3cebae8a6b48a1b86f51aa9a9a" class="navnav">17.6.1 Datenkonvertierung durch den »OutputStreamWriter«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_006.htm#mj144d7a0549a2ce1fab9915120fb31b22" class="navnav">17.6.2 Automatische Konvertierungen mit dem »InputStreamReader«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_007.htm#mjfe86e50114d12487bf98150109f0c80e" class="navnav">17.7 Kommunikation zwischen Threads mit Pipes *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_007.htm#mj5543b5920d0846d094719457aed5af2d" class="navnav">17.7.1 »PipedOutputStream« und »PipedInputStream«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_007.htm#mj59d39f069c9dee074ea833ee91cdb61d" class="navnav">17.7.2 »PipedWriter« und »PipedReader«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_008.htm#mjbbc77ec964ae1ebbe66c5eb2007a8b82" class="navnav">17.8 Datenkompression *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_008.htm#mj3a803e5a22241029d6675e5d613ea7e2" class="navnav">17.8.1 Java-Unterstützung beim Komprimieren</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_008.htm#mj7fca467b6415e4b9fe73aee4c8e16a50" class="navnav">17.8.2 Datenströme komprimieren</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_008.htm#mje0c8562dbd63f757609825045dddf21d" class="navnav">17.8.3 Zip-Archive</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_008.htm#mjd663fcaaa21f8f86000c0a811e58b9f1" class="navnav">17.8.4 Jar-Archive</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_009.htm#mj7b8d560bda25a4f29394a149b2c3d535" class="navnav">17.9 Prüfsummen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_009.htm#mje3d5968795a85089bfd586581f1b781a" class="navnav">17.9.1 Die Schnittstelle Checksum</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_009.htm#mj9cdca16397ae80dcd9d85adf2cf3cc2f" class="navnav">17.9.2 Die Klasse »CRC32«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_009.htm#mj50d1509644070e5a1d40daa4faa61fa9" class="navnav">17.9.3 Die Adler32-Klasse</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_010.htm#mjfbe8cb1105d7dfaf6adbc23f31c81b93" class="navnav">17.10 Persistente Objekte und Serialisierung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_010.htm#mj69bf799342565da382851751b8405c7a" class="navnav">17.10.1 Objekte mit der Standard-Serialisierung speichern und lesen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_010.htm#mj9d80b91a6c19f204a99e533d4b06d998" class="navnav">17.10.2 Zwei einfache Anwendungen der Serialisierung *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_010.htm#mj4cfaf8e1986ce009185bb267467eb491" class="navnav">17.10.3 Die Schnittstelle »Serializable«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_010.htm#mjcafe7062d212cfb4fcf71bb901c8099c" class="navnav">17.10.4 Nicht serialisierbare Attribute aussparen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_010.htm#mjd107c87fbdb86f55755ffc6b4039e012" class="navnav">17.10.5 Das Abspeichern selbst in die Hand nehmen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_010.htm#mjb643b06ff5b465827ea26c24669f7289" class="navnav">17.10.6 Tiefe Objektkopien *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_010.htm#mj263338363082753d9e0405edbfce3f51" class="navnav">17.10.7 Versionenverwaltung und die SUID</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_010.htm#mj07f5c3cb185628598b5c79a3729d9f9d" class="navnav">17.10.8 Wie die »ArrayList« serialisiert *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_010.htm#mjfcd0e0b26ebafe7b761d60df5980a4cd" class="navnav">17.10.9 Probleme mit der Serialisierung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_011.htm#mj127a190a2c34664de897acc631316756" class="navnav">17.11 Alternative Datenaustauschformate</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_011.htm#mjf9ee0e42eb705d67748dc15d0336cb3f" class="navnav">17.11.1 Serialisieren in XML-Dateien</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_011.htm#mje0da83ef3a9c48ec1e3010dacb6e808f" class="navnav">17.11.2 XML-Serialisierung von JavaBeans mit JavaBeans Persistence *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_011.htm#mja49e87eb234ecf53ab600822784dddcb" class="navnav">17.11.3 Open-Source Bibliothek XStream *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_012.htm#mja2c8f5a4b1baf6bb787a020787e01cc9" class="navnav">17.12 Tokenizer *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_17_012.htm#mjd6c5137e5c1c6b9e9b82dbd43f2c974a" class="navnav">17.12.1 StreamTokenizer</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_17_013.htm#mj4a4cb19892fe3082f19af7d71ff8b2e5" class="navnav">17.13 Zum Weiterlesen</a></strong></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td><div class="main"><a id="mjb6060f6cd569b28d5768b131b007f8c8" name="mjb6060f6cd569b28d5768b131b007f8c8"></a><a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2"><span class="cfett">17.3</span> Formatierte Textausgaben  <a href="#t2t32"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></h2>
<p>Um mit einem <span class="clisting">Writer</span> oder <span class="clisting">OutputStream</span> komfortable Zeichenfolgen &#8211; zum Beispiel String-Repräsentationen primitiver Datentypen &#8211; zu erzeugen, ist eine Menge Schreibaufwand nötig, da ein einfacher <span class="clisting">Writer</span> nur Zeichen bzw. Strings und ein simpler <span class="clisting">OutputStream</span> sogar nur Bytes oder Byte-Folgen schreibt. Dieser Abschnitt stellt die beiden Klassen <span class="clisting">PrintWriter</span> und <span class="clisting">PrintStream</span> vor, die das Erzeugen textueller Ausgaben vereinfachen und das Ergebnis in einen Zielstrom oder in eine Datei schreiben.</p><a id="mj3573ae904c53fd07e28b8d6dc4973fc8" name="mj3573ae904c53fd07e28b8d6dc4973fc8"></a><a name="t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t32"></a><h3 class="t3"><span class="cfett">17.3.1</span> Die Klassen »PrintWriter« und »PrintStream«  <a href="#t2t33"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t31"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Schon in den ersten Programmen haben wir ein <span class="clisting">PrintStream</span>-Objekt verwendet &#8211; doch vermutlich, ohne es zu wissen. Es steckte im <span class="clisting">out</span>-Attribut der Klasse <span class="clisting">System</span>. Typisch für <span class="clisting">PrintStream</span> und <span class="clisting">PrintWriter</span> sind die vielen überladenen Methoden namens <span class="clisting">print()</span>, <span class="clisting">println()</span>, <span class="clisting">printf()</span> und <span class="clisting">format()</span>, die unterschiedliche Datentypen annehmen und eine String-Repräsentation erzeugen. Anders als viele Strom-Klassen erzeugen die Klassen bei Schreibproblemen keine <span class="clisting">IOException</span>, sondern setzen intern ein Flag, das durch die Methode <span class="clisting">check-Error()</span> nach außen kommt.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Beispiel   </span>Schreibe eine Zeichenkette und die String-Repräsentation des aktuellen Datums in eine Datei:</p>
<p class="tabunter"><strong>Listing 17.6    </strong>com/tutego/insel/io/stream/WriteInFile.java, main()</p>
<div class="listing"><pre class="prettyprint">PrintWriter out = new PrintWriter( "c:/datei.txt" );
out.println( "Hallo Welt!" );
out.print( "Es ist " );
out.printf( "%tT Uhr.", new Date() );
out.close();</pre></div>
</td>
</tr>
<tr>
<td class="tabellentext">
<p class="BStandard">Obwohl die Methoden selbst keine Ausnahmen auslösen können, kann es doch dieser spezielle Konstruktor, der in eine Datei schreibt.</p>
</td>
</tr>
</table><br><div class="bildbox">
<p><a name="IDAUOWD"></a><a onClick="OpenWin('bilder/printstreamprintwriter.gif','Abbildung',800,800)"><img border="0" src="bilderklein/kleinprintstreamprintwriter.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<h4 class="t4">Konstruktoren</h4>
<p>Die Konstruktoren von <span class="clisting">PrintStream</span> und <span class="clisting">PrintWriter</span> erwarten entweder ein Objekt vom Typ <span class="clisting">OutputStream</span>, <span class="clisting">Writer</span> (nur <span class="clisting">PrintWriter</span>), <span class="clisting">File</span> oder einen String für den Dateinamen, in dem die Ausgabe geschrieben wird. Mit den beiden zuletzt genannten Konstruktoren wird der <span class="clisting">PrintWriter</span>/<span class="clisting">PrintStream</span> nicht als Dekorator um einen existierenden <span class="clisting">Writer</span>/<span class="clisting">Stream</span> eingesetzt; es muss also kein <span class="clisting">FileWriter</span> in den Konstruktor von <span class="clisting">PrintWriter</span> bzw. <span class="clisting">FileOutputStream</span> im Konstruktor von <span class="clisting">PrintStream</span> gesetzt werden, um in eine Datei zu schreiben.</p>
<p>Technisch gesehen ist ein <span class="clisting">PrintStream</span> eine Unterklasse von <span class="clisting">FilterOutputStream</span> (interessanterweise gilt das für die Klasse <span class="clisting">PrintWriter</span> nicht, die eine direkte Unterklasse von <span class="clisting">Writer</span> ist.)</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.io.<span class="cfett">PrintWriter</span>       class java.io.<span class="cfett">PrintStream</span>
extends Writer                  extends FilterOutputStream
                                implements Appendable, Closeable</pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">PrintWriter( File file ) throws FileNotFoundException</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintStream( File file ) throws FileNotFoundException</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter( String fileName )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintStream( String fileName )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter( Writer out )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter( OutputStream out )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintStream( OutputStream out )</span>
Erzeugt einen neuen <span class="clisting">PrintWriter</span> bzw. <span class="clisting">PrintStream</span>, der in die angegebene Datei &#8211; die entweder durch den Dateinamen oder ein <span class="clisting">File</span>-Objekt gegeben ist &#8211;, den <span class="clisting">Writer</span> beziehungsweise <span class="clisting">OutputStream</span> schreibt. Bei einem Zeilenende wird nicht automatisch in den Puffer geschrieben.</li>
</ul>
<h4 class="t4">Auto-Flush</h4>
<p>Die Ausgabe in den <span class="clisting">PrintWriter</span> und <span class="clisting">PrintStream</span> ist so lange gepuffert, bis <span class="clisting">flush()</span> ausgeführt wird. Das Verhalten lässt sich mit einem Schalter ändern, denn einige Konstruktoren nehmen optional ein »Auto-Flush« an, das bestimmt, ob die Daten bei einem <span class="clisting">println()</span> oder einem <span class="clisting">printf()</span> bzw. <span class="clisting">format()</span> mit explizitem »%n« aus dem Puffer gespült werden. So schreibt <span class="clisting">println("Hallo")</span> auf jeden Fall den String in den Datenstrom, wenn der Konstruktor mit <span class="clisting">autoFlush</span> gleich <span class="clisting">true</span> aufgerufen wurde, und keine Daten bleiben im Puffer. Für den <span class="clisting">PrintStream</span> gilt zusätzlich beim aktivierten Auto-Flush, dass bei jedem Byte »\n« in der Zeichenkette der Puffer geleert wird, also auch bei Zeichen, die über die <span class="clisting">write()</span>-Methoden geschrieben werden.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.io.<span class="cfett">PrintWriter</span>       class java.io.<span class="cfett">PrintStream</span>
extends Writer                  extends FilterOutputStream
                                implements Appendable, Closeable</pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">PrintWriter( Writer out, boolean autoFlush )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter( OutputStream out, boolean autoFlush )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintStream( OutputStream out, boolean autoFlush )</span>
Erzeugt einen neuen <span class="clisting">PrintWriter</span> beziehungsweise <span class="clisting">PrintStream</span>, der automatisch bei <span class="clisting">autoFlush</span> gleich <span class="clisting">true</span> am Zeilenende mittels <span class="clisting">println()</span>in den Puffer schreibt.</li>
</ul>
<h4 class="t4">Zeichenkodierung und Konvertierungen</h4>
<p>Die Konvertierung in Byte geschieht nach der Standard-Kodierung der Plattform oder wie im Konstruktor angegeben.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.io.<span class="cfett">PrintWriter</span>       class java.io.<span class="cfett">PrintStream</span>
extends Writer                  extends FilterOutputStream
                                implements Appendable, Closeable</pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">PrintWriter( File file, String csn )</span>
<span class="clisting"> throws FileNotFoundException, UnsupportedEncodingException</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintStream( File file, String csn )</span>
<span class="clisting"> throws FileNotFoundException, UnsupportedEncodingException</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter( String fileName, String csn )</span>
<span class="clisting"> throws FileNotFoundException, UnsupportedEncodingException</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintStream( String fileName, String csn )</span>
<span class="clisting"> throws FileNotFoundException, UnsupportedEncodingException</span>
Erzeugt einen neuen <span class="clisting">PrintWriter</span> zum Schreiben in Dateien mit den angegebenen Kodierungen.</li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintStream( OutputStream out, boolean autoFlush, String encoding )
throws UnsupportedEncodingException</span>
Erzeugt einen <span class="clisting">PrintStream</span> mit gewünschter Pufferleerung und Zeichenkodierung.</li>
</ul>
<h4 class="t4">Methodenübersicht</h4>
<p>Als Methoden bieten <span class="clisting">PrintWriter</span> und <span class="clisting">PrintStream</span> im Wesentlichen das Gleiche: eine Reihe von <span class="clisting">print()</span>, <span class="clisting">println()</span>, <span class="clisting">format()</span>, <span class="clisting">printf()</span> sowie <span class="clisting">append()</span>-Methoden aus <span class="clisting">Appendable</span>.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.io.<span class="cfett">PrintWriter</span>       class java.io.<span class="cfett">PrintStream</span>
extends Writer                  extends FilterOutputStream
                                implements Appendable, Closeable</pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">void print( boolean | char | char[] | double | float | int | String )</span>
Schreibt <span class="clisting">boolean</span>, ein einzelnes Zeichen, ein Array von Zeichen, Fließkommazahlen, Ganzzahlen oder einen <span class="clisting">String</span>. Ist das Char-Feld <span class="clisting">null</span>, gibt es eine <span class="clisting">NullPointerException</span>.</li>
</ul>
<ul class="gp">
<li><span class="clisting">void print( Object o )</span>
Ruft <span class="clisting">o.toString()</span> auf und gibt das Ergebnis aus, wenn <span class="clisting">o</span> ungleich <span class="clisting">null</span> ist. Sonst ist die Ausgabe <span class="clisting">null</span>.</li>
</ul>
<ul class="gp">
<li><span class="clisting">void println()</span>
Schreibt Zeilenvorschubzeichen.</li>
</ul>
<ul class="gp">
<li><span class="clisting">void println( boolean | char | char[] | double | float | int | Object | String )</span>
Schreibt den Datentyp wie <span class="clisting">print()</span> und schließt die Zeile mit einem Zeilenendezeichen ab.</li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter</span>/<span class="clisting">PrintStream format( Locale l, String format, Object... args )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter</span>/<span class="clisting">PrintStream format( String format, Object... args )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter</span>/<span class="clisting">PrintStream printf( Locale l, String format, Object... args )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter</span>/<span class="clisting">PrintStream printf( String format, Object... args )</span>
Gibt eine nach dem Formatierungsstring gegebene Zeichenfolge aus. Ist das Format <span class="clisting">null</span>, folgt eine <span class="clisting">NullPointerException</span>; bei inkorrektem Formatierungsstring folgt eine <span class="clisting">IllegalFormatException</span>.</li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter</span>/<span class="clisting">PrintStream append( char c )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter</span>/<span class="clisting">PrintStream append( CharSequence csq )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">PrintWriter</span>/<span class="clisting">PrintStream append( CharSequence csq, int start, int end )</span>
Schreibt Zeichen, Felder von Zeichen oder einen String. Die <span class="clisting">append()</span>-Methoden stammen aus der Schnittstelle <span class="clisting">Appendable</span>.</li>
</ul>
<ul class="gp">
<li><span class="clisting">void close()</span>
Schließt den Stream. Methode aus <span class="clisting">Closeable</span>.</li>
</ul>
<ul class="gp">
<li><span class="clisting">void flush()</span>
Schreibt gepufferte Daten. Methode aus <span class="clisting">Flushable</span>.</li>
</ul>
<p>Der <span class="clisting">PrintWriter</span> und <span class="clisting">PrintStream</span> implementieren als typischer <span class="clisting">Writer</span> und <span class="clisting">OutputStream</span> noch die <span class="clisting">write()</span>-Methoden; einmal mit <span class="clisting">char</span> und einmal mit <span class="clisting">byte</span>.</p>
<h4 class="t4">Umgang im Fehlerfall</h4>
<p>Keine der Methoden löst eine <span class="clisting">IOException</span> aus (nur die Konstruktoren können eine <span class="clisting">FileNotFoundException</span>, also eine <span class="clisting">IOException</span> auslösen). Intern fangen der <span class="clisting">PrintWriter</span> und <span class="clisting">PrintStream</span> eine mögliche <span class="clisting">IOException</span> ab und setzen ein internes Flag <span class="clisting">trouble</span>, auf das der Programmablauf jedoch keinen weiteren Einfluss hat. (Daher musste auch die Methode <span class="clisting">write(String)</span> neu deklariert werden, da die Methode <span class="clisting">write(String)</span> der <span class="clisting">Writer</span>-Klasse eine <span class="clisting">IOException</span> auslöst.) Den Fehlerstatus erfragt <span class="clisting">checkError()</span>.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">class java.io.<span class="cfett">PrintWriter</span>       class java.io.<span class="cfett">PrintStream</span>
extends Writer                  extends FilterOutputStream
                                implements Appendable, Closeable</pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">boolean checkError()</span>
Schreibt mit <span class="clisting">flush()</span> gepufferte Daten und testet, ob intern bei der Verarbeitung eine <span class="clisting">IOException</span> (außer <span class="clisting">InterruptedIOException</span>) aufgetreten ist oder manuell <span class="clisting">setError()</span> aufgerufen wurde. Die Abfrage ist wichtig, da die Klasse keine Ein-/Ausgabe-Exception auslöst.</li>
</ul>
<ul class="gp">
<li><span class="clisting">protected void setError()</span>
Setzt den Fehlerstatus auf <span class="clisting">true</span>. Mit der <span class="clisting">protected</span>-Methode können Unterklassen eines <span class="clisting">PrintWriter</span> den Fehlerstatus setzen, den <span class="clisting">checkError()</span> einbezieht.</li>
</ul>
<ul class="gp">
<li><span class="clisting">protected void clearError()</span>
Löscht den internen Fehlerstatus.</li>
</ul><a id="mjc6e7c16fc76cbc87e02a674ecb288cbf" name="mjc6e7c16fc76cbc87e02a674ecb288cbf"></a><a name="t32"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t33"></a><h3 class="t3"><span class="cfett">17.3.2</span> »System.out«, »System.err« und »System.in«  <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><a href="#t2t32"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Beim Aufbau der <span class="clisting">System</span>-Klasse erzeugt Java automatisch drei Stream-Objekte, die üblicherweise die Eingaben über die Tastatur und Ausgaben über den Bildschirm repräsentieren:</p>
<ul class="gp">
<li><span class="clisting">System.in</span> ist das Standardeingabegerät. <span class="clisting">System.in</span> ist ein Exemplar der Klasse <span class="clisting">InputStream</span> (genauer gesagt vom Typ <span class="clisting">BufferedInputStream</span>)</li>
</ul>
<ul class="gp">
<li><span class="clisting">System.out</span> und <span class="clisting">System.err</span> stehen für das Standardausgabegerät für normale Ausgaben und Fehlerausgaben. Sie sind Exemplare von <span class="clisting">PrintStream</span></li>
</ul><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Hinweis   </span>Wird ein Programm von der Konsole aufgerufen, so können mit Hilfe so genannter Umleitungen auch Datenströme von Dateien in das (und aus dem) Java-Programm gelenkt werden, sodass dann <span class="clisting">System.in</span> und <span class="clisting">System.out</span>/<span class="clisting">System.err</span> automatisch Dateiströme sind und somit nicht mehr auf die Konsole gehen. Das kann etwa so aussehen:</p>
<div class="listing"><pre class="prettyprint">$ java WithRedirectedStreams &gt; out.text &lt; in.txt</pre></div>
</td>
</tr>
</table><br><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">final class java.lang.<span class="cfett">System</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static final InputStream in</span>
Dies ist der Standardeingabestrom. Er ist immer geöffnet und nimmt die Benutzereingaben normalerweise über die Tastatur entgegen.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static final PrintStream out</span>
Der Standardausgabestrom. Er ist immer geöffnet und normalerweise mit der Bildschirmausgabe verbunden.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static final PrintStream err</span>
Der Standard-Fehlerausgabestrom. Er wurde eingeführt, um die Fehlermeldungen von den Ausgabemeldungen zu unterscheiden. Auch wenn der Ausgabekanal umgeleitet wird, bleiben diese Meldungen erreichbar.</li>
</ul><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<p class="BStandard"><span class="cfett">Beispiel   </span>In eigenen Projekten gibt es selten die Notwendigkeit für <span class="clisting">PrintStream</span>, da die Bytes nicht in einer speziellen Kodierung geschrieben werden. Wir stützen uns auf die Klasse <span class="clisting">PrintWriter</span>, die die abstrakte Klasse <span class="clisting">Writer</span> erweitert. Das Attribut <span class="clisting">System.out</span> bleibt weiterhin vom Typ <span class="clisting">PrintStream</span>, und die Deklaration <span class="clisting">PrintWriter o = System.out</span> ist falsch. Wenn die Standard-Kodierung in Ordnung ist, kann <span class="clisting">PrintStream</span> für Debug-Code auf die Konsole mittels <span class="clisting">System.out</span> verwendet werden. Sonst ist <span class="clisting">PrintWriter</span> eine bessere Wahl, da er auch nach <span class="clisting">System.out</span> schreiben kann:</p>
<div class="listing"><pre class="prettyprint">PrintWriter o = new PrintWriter( System.out );</pre></div>
</td>
</tr>
</table><br><h4 class="t4">Schreibarbeit sparen *</h4>
<p>Natürlich ist es Schreibarbeit, immer <span class="clisting">System.out.printXXX()</span> angeben zu müssen, so wie in:</p>
<div class="listing"><pre class="prettyprint">System.out.println( "Das Programm gibt die Ausgabe:" );
System.out.println( 1.234 );
System.out.println( "Die drei Fragezeichen sind toll." );</pre></div>
<p>Eine Möglichkeit, das Ganze abzukürzen, besteht darin, das statische <span class="clisting">import</span> zu nutzen. Doch auch mit einem Verweis können wir uns Arbeit sparen. Das funktioniert, da <span class="clisting">System.out</span> ein Objekt vom Typ <span class="clisting">PrintStream</span> ist:</p>
<div class="listing"><pre class="prettyprint">final PrintStream o = System.out;
o.println( "Neu!" );
o.println( "Jetzt noch weniger zu schreiben." );
o.println( "Hilft auch Gelenken wieder auf die Sprünge!" );</pre></div>
<h4 class="t4">Ströme umlenken *</h4>
<p>Die Ströme hinter <span class="clisting">System.out</span>, <span class="clisting">System.err</span> und <span class="clisting">System.in</span> sind vom Laufzeitsystem vorbelegt und lassen sich ändern. Dazu deklariert die Klasse <span class="clisting">System</span> drei statische Methoden:</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">final class java.lang.<span class="cfett">System</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">static void setOut( PrintStream out )</span></li>
</ul>
<ul class="gp">
<li><span class="clisting">static void setErr( PrintStream err )</span>
Der Standardausgabekanal/Fehlerkanal wird auf den angegebenen <span class="clisting">PrintStream</span> gesetzt.</li>
</ul>
<ul class="gp">
<li><span class="clisting">static void setIn( InputStream in )</span>
Der Eingabestrom kann umgesetzt werden, um beispielsweise aus einer Datei oder Netzwerkverbindung Daten zu beziehen, die an <span class="clisting">in</span> anliegen sollen.</li>
</ul>
<p>Für Applikationen ist es nur möglich, über die drei genannten Methoden die Standardeingabe auf einen beliebigen <span class="clisting">InputStream</span> und die Standardausgabe auf einen beliebigen <span class="clisting">PrintStream</span> umzuleiten. Sehr erstaunlich in der <span class="clisting">System</span>-Klasse ist die Tatsache, dass die Attribute <span class="clisting">in</span>, <span class="clisting">out</span> und <span class="clisting">err</span> final sind und daher eigentlich nicht geändert werden können. Hier greift das JDK tief in die Trickkiste.</p>
<h4 class="t4">Den Bildschirm löschen und Textausgaben optisch aufwerten *</h4>
<p>Die Java-Umgebung setzt keine spezielle grafische Architektur voraus und kein spezielles Terminal. Als systemunabhängige Programmiersprache bietet Java außer der einfachen Textausgabe keine Möglichkeit, die Farben für die Textzeichen zu ändern, den Cursor zu setzen oder den Bildschirm zu löschen.</p>
<p>Ein VT100-Terminal speichert neben dem Text auch Attribute, und es existieren unterschiedliche Kontrollsequenzen, sodass die Konsole Text formatiert ausgegeben kann. Wir können bei einem VT100-Terminal Kontrollzeichen über <span class="clisting">System.out</span> ausgeben und so zum Beispiel den Bildschirm löschen.</p>
<div class="listing"><pre class="prettyprint">System.out.println( "\u001b[H\u001b[2J" );</pre></div>
<p>Diese Kontrollzeichen sind kryptisch, und so gibt es eine Curses-Bibliothek, mit der Entwickler auf einem VT100-Terminal Zeichenattribute auf der Konsole ändern, den Cursor zum Wandern bringen und einfache ASCII-Fenster erstellen können. Unter Unix implementiert <span class="ckursiv">ncurses</span> die Funktionalität &#8211; unter Windows gibt es Vergleichbares als <span class="ckursiv">PDCurses</span>. Zwei bekanntere Open-Source-Bibliotheken bieten Java Zugriff auf die Curses-Bibliothek: <span class="ckursiv">CHARVA</span> (<span class="ckursiv">http://</span><span class="ckursiv">www.pitman.co.za/projects/charva/</span>) und <span class="ckursiv">Jcurzez</span> (<span class="ckursiv">http://www.nongnu.org/jcurzez/</span>).</p><br><hr><a name="kommentar"></a><h3>Ihr Kommentar</h3>
                       Wie hat Ihnen das &lt;openbook&gt; gefallen? Wir freuen uns immer über Ihre freundlichen und kritischen Rückmeldungen.
                       <form action="http://www.galileo-press.de/feedback/openbook" method="post" style="text-align: center; margin-top: 10px;"><input type="hidden" name="openbookurl" value="javainsel9/.htm"><input type="hidden" name="buchtitel" value="Java ist auch eine Insel"><input type="hidden" name="Kapitel" value="17.3 Formatierte Textausgaben"><table border="0">
<tr>
<td><label for="name">Name</label><br></td>
<td><input type="text" name="name" id="name" size="40"><br></td>
</tr>
<tr>
<td><label for="email">E-Mail</label><br></td>
<td><input type="text" name="email" id="email" size="40"><br></td>
</tr>
<tr>
<td valign="top"><label for="comment">Ihr Kommentar</label><br></td>
<td><textarea name="comment" id="comment" rows="10" cols="40"></textarea><br></td>
</tr>
<tr>
<td>
</td>
<td><input type="submit" value="Kommentar absenden"></td>
</tr>
</table>
</form>
</div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="javainsel_17_002.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div></td>
<td align="right" width="25%"><div align="right"><a href="javainsel_17_004.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
</table>
</div></td>
<td width="10" valign="top">  </td>
<td width="160" valign="top">
<table border="0" cellpadding="0" cellspacing="0" width="160">
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2">
&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opjiVIV" class="autor">
<strong>Zum Katalog</strong></a>

</td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2">
<img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV">
<img src="common/9783836215060_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Java ist auch eine Insel" title="Zum Katalog: Java ist auch eine Insel">
<br><br><br><br><br><br><strong>Java ist auch eine Insel</strong><br><img src="common/pfeil_rechts5.gif" border="0" alt="">Jetzt bestellen</a><br /><br />
</td>
</tr>
</table>
</td>

</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Ihre Meinung?</strong></a></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">

<table cellspacing="3">
<tr>
<td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br><a href="#kommentar"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
<br><br></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>

<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
</td>
</tr>

<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opjiVIV" class="autor"><strong>Buchempfehlungen</strong></a></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2285?GPP=opjiVIV">
<img src="common/9783836215275_s.gif" width="102" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Computergeschichte(n) – nicht nur für Geeks" title="Zum Katalog: Computergeschichte(n) – nicht nur für Geeks"><br><br><br><br><br><br>&nbsp;Computergeschichte(n)<br>&nbsp;nicht nur für Geeks</a><br><br></td>
</tr>

<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1949?GPP=opjiVIV">
<img src="common/9783836213080_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Java und XML" title="Zum Katalog: Java und XML"><br><br><br><br><br><br><br>&nbsp;Java und XML</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2346?GPP=opjiVIV">
<img src="common/9783836215688_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in Java" title="Zum Katalog: Einstieg in Java"><br><br><br><br><br><br><br>&nbsp;Einstieg<br>&nbsp;in Java</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2051?GPP=opjiVIV">

<img src="common/9783836213677_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in XML" title="Zum Katalog: Einstieg in XML"><br><br><br><br><br><br><br>&nbsp;Einstieg<br>&nbsp;in XML</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2322?GPP=opjiVIV">
<img src="common/9783836215527_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Visual C# 2010" title="Zum Katalog: Visual C# 2010"><br><br><br><br><br><br><br>&nbsp;Visual C# 2010</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2212?GPP=opjiVIV">
<img src="common/9783836214742_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Professionell entwickeln mit Visual C# 2010" title="Zum Katalog: Professionell entwickeln mit Visual C# 2010"><br><br><br><br><br><br><br>&nbsp;Professionell<br>&nbsp;entwickeln mit<br>&nbsp;Visual C# 2010</a><br><br></td>
</tr>

<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2156?GPP=opjiVIV">
<img src="common/9783836214292_s.gif" width="108" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C++ von A bis Z" title="Zum Katalog: C++ von A bis Z"><br><br><br><br><br><br><br>&nbsp;C++ von A bis Z</a><br><br></td>
</tr>
</table></td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>

<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Shopping</strong></span></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opjiVIV"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br><br></td>

</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table><br><br><hr width="70%" align="center">
<div align="center">
<p class="standard"><strong>Copyright © Galileo Press 2011</strong><br>
        Für Ihren privaten Gebrauch dürfen Sie die Online-Version natürlich ausdrucken.
        Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die
        gebundene Ausgabe: Das Werk einschließlich aller seiner Teile ist urheberrechtlich
        geschützt. Alle Rechte vorbehalten einschließlich der Vervielfältigung, Übersetzung,
        Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>
      Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
