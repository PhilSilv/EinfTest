<html>
<head>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Galileo Computing :: Java ist auch eine Insel – 21.3 Die Klasse URLConnection *</title>
<meta name="title" content="Galileo Computing :: Java ist auch eine Insel - 21.3 Die Klasse URLConnection *">
<meta name="author" content="Christian Ullenboom ">
<meta name="publisher" content="Galileo Press 2011">
<meta name="copyright" content="Galileo Press 2011">
<meta name="Description" content="Java ist auch eine Insel - Das umfassende Handbuch – 21.3 Die Klasse URLConnection *">
<meta name="audience" content="Alle">
<meta name="robots" content="INDEX,FOLLOW">
<meta http-equiv="content-language" content="de">
<link rel="stylesheet" type="text/css" href="common/galileo_open.css">
<link rel="prev" href=".htm">
<link rel="next" href=".htm"><script type="text/javascript"><!--
    function OpenWin(url,name,height,width)
    {
      var InfoWin = window.open(url,name,"directories=0,height="+height+",width=" + width + ",hotkeys=0,location=0,menubar=0,resizable=1,screenX=150,screenY=10,left=150,top=10,scrollbars=1,status=1,titlebar=0,toolbar=0");
      InfoWin.focus();
    }
    //--></script><link href="common/prettify.css" type="text/css" rel="stylesheet"><script type="text/javascript" src="common/prettify.js"></script></head>
<body vlink="#000099" link="#000099" alink="#000099" onload="prettyPrint()">
<table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#000066">
<tr>
<td height="74" valign="bottom" colspan="2"><a href="http://www.galileocomputing.de/katalog/openbook?GPP=opjiVIV"><img src="common/galileocomputing_openbook.gif" width="200" height="56" border="0" alt="Galileo Computing < openbook >" title="Galileo Computing < openbook >"></a></td>
<td width="80" height="74"><a href="http://www.galileocomputing.de/?GPP=opjiVIV"><img src="common/galileocomputing.gif" border="0" alt="Galileo Computing - Professionelle Bücher. Auch für Einsteiger." title="Galileo Computing - Professionelle Bücher. Auch für Einsteiger."></a></td>
</tr>
</table>
<div align="right"><a href="http://www.galileocomputing.de/?GPP=opjiVIV" class="navnav">Professionelle Bücher. Auch für Einsteiger.</a></div><br><table class="tbl" border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td width="190" valign="top">
<table class="tbl1" border="0" cellpadding="3" cellspacing="0" width="190" align="left">
<tr>
<td class="tbl2"><a class="nav" href="index.htm#_top">Inhaltsverzeichnis</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_00_001.htm#mj58b119301920569a446c9c510503f310">Vorwort</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_01_001.htm#mja8fc5b7ad19fc7332bc66b09a8fda26e">1 Java ist auch eine Sprache</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_02_001.htm#mj313f67c98dc9ecaddfa2d8b80f057fd2">2 Sprachbeschreibung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_03_001.htm#mjcd3b5720e8605484942e3476a1075bdf">3 Klassen und Objekte</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_04_001.htm#mj71fbc84ad33a281b9352b0b19fae2fb2">4 Der Umgang mit Zeichenketten</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_05_001.htm#mj005cd8e604aefc3ae72b92880fcee5c6">5 Eigene Klassen schreiben</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_06_001.htm#mj6f6b47453043c38837bfc32154a97968">6 Exceptions</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_07_001.htm#mjc4a1f6f3499a02fb64fe89046739edca">7 Generics&lt;T&gt;</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_08_001.htm#mj46e914488628367f5dfc0a62c3a78a53">8 Äußere.innere Klassen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_09_001.htm#mj94af2b90e8a2dad6c1ef67255f89a137">9 Besondere Klassen der Java SE</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_10_001.htm#mjcae20f50ffbc015d0b66861e7087af9b">10 Architektur, Design und angewandte Objektorientierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_11_001.htm#mj60bc6a007ae9b8657949f3e91d96df3d">11 Die Klassenbibliothek</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_12_001.htm#mj0ce00eb41aae2b084534019cf6edc3b6">12 Bits und Bytes und Mathematisches</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_13_001.htm#mj245f5f8d5a858b46462d64e9b9c0786b">13 Datenstrukturen und Algorithmen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_14_001.htm#mj8c6f381221d805dd6fbe480731ac0c58">14 Threads und nebenläufige Programmierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_15_001.htm#mjbe3ed0989722396930966f95deeb2497">15 Raum und Zeit</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_16_001.htm#mj78bd405fb0de0cff099c06255fe36853">16 Dateien, Verzeichnisse und Dateizugriffe</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_17_001.htm#mjb420b02f4ccf65226f7271e48cefa05d">17 Datenströme</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_18_001.htm#mjedab16f1a9cc168eda4a24416359e0b9">18 Die eXtensible Markup Language (XML)</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_19_001.htm#mjc8f47f7f51ac3795c46c4544f391b02e">19 Grafische Oberflächen mit Swing</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_20_001.htm#mj25cc7d47e476b8b1a183a10ee741dbaa">20 Grafikprogrammierung</a></td>
</tr>
<tr>
<td><a class="navh" href="javainsel_21_001.htm#mjea7bcdd596c8bd25b078a00221a01a75">21 Netzwerkprogrammierung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_22_001.htm#mjde622db61608a627262a27ecb377d675">22 Verteilte Programmierung mit RMI</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_23_001.htm#mj23bf599d65364bcd05d06a34cb5593bf">23 JavaServer Pages und Servlets</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_24_001.htm#mja621f3b4a74c7fa576b4a58b1614041e">24 Datenbankmanagement mit JDBC</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_25_001.htm#mja2e217bf5724cc65eba184a2af8b79cf">25 Reflection und Annotationen</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_26_001.htm#mjb47dd6e0a309b7e78cad68f6b5de9319">26 Dienstprogramme für die Java-Umgebung</a></td>
</tr>
<tr>
<td><a class="navnav" href="javainsel_27_001.htm#mjf59db36d9280a70e0d3d196e9bf160f5">A Die Begleit-DVD</a></td>
</tr>
<tr>
<td><a class="navnav" href="stichwort.htm#_top">Stichwort</a></td>
</tr>
<tr>
<td><br><a href="http://download2.galileo-press.de/openbook/galileocomputing_javainsel9.zip" class="navnav"><strong>Download:</strong><br>- ZIP, ca. 20,5 MB</a></td>
</tr>
<tr>
<td><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="navnav">Buch bestellen</a></td>
</tr>
<tr>
<td><a class="navnav" href="#kommentar">Ihre Meinung?</a><br><br></td>
</tr>
</table>
</td>
<td width="10"><img src="common/spacer10.gif" width="10" height="10" alt="Spacer"></td>
<td width="85%" valign="top" align="center"><div align="center">
<table width="98%" border="0" cellspacing="0" cellpadding="0" bgcolor="#FFFFFF">
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="javainsel_21_002.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a href="http://www.galileocomputing.de/?GPP=opjiVIV" class="navnav">Galileo Computing /</a><a href="http://www.galileocomputing.de/katalog/openbook/?GPP=opjiVIV" class="navnav"> &lt;openbook&gt; /</a><a href="index.htm" class="navnav"> Java-Insel</a></div></td>
<td align="right" width="25%"><div align="right"><a href="javainsel_21_004.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" valign="top"><table width="100%" border="0" cellpadding="10" cellspacing="0" class="box">
<tr>
<td colspan="2"><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="buchtitel">Java ist auch eine Insel</a><span class="autor"> von Christian Ullenboom </span><br><span class="untertitel">Das umfassende Handbuch</span></td>
</tr>
<tr>
<td valign="top" width="211"><dl>
<dt><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV" class="navnav"><img src="common/9783836215060.gif" border="0" alt="Buch: Java ist auch eine Insel" title="Buch: Java ist auch eine Insel"></a></dt>
<dd><br><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV"><span class="autor"><strong>Java ist auch eine Insel</strong><br>geb., mit DVD<br>1482 S., 49,90 Euro<br>Galileo Computing<br>ISBN 978-3-8362-1506-0</span></a></dd>
</dl></td>
<td width="80%"><table border="0">
<tr>
<td valign="baseline"><img src="common/pfeil_u.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="3" class="kap"><strong><a href="javainsel_21_001.htm#mjea7bcdd596c8bd25b078a00221a01a75" class="navnav">21 Netzwerkprogrammierung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_21_001.htm#mj912f16fad9a4d2996bb07718a7065cc7" class="navnav">21.1 Grundlegende Begriffe</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_21_002.htm#mj7b4c38aadbbcc975306fbda867a319a4" class="navnav">21.2 URI und URL</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_002.htm#mj6a9a8db85dce8faa6616fadc6e1a3ce4" class="navnav">21.2.1 Die Klasse URI</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_002.htm#mj65da5acafb618d85063e608c8b1d3832" class="navnav">21.2.2 Die Klasse URL</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_002.htm#mj0411d96ed0371ecdf4693b88944377b2" class="navnav">21.2.3 Informationen über eine URL *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_002.htm#mj0ed88ae14045905d93cad24b235101ae" class="navnav">21.2.4 Der Zugriff auf die Daten über die Klasse »URL«</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="#mj2552385424dfea123df910156b6be1bd" class="navh">21.3 Die Klasse URLConnection *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj361cf58450bed19b4f7135a90e9622f8" class="navh">21.3.1 Methoden und Anwendung von URLConnection</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj13ed071a8bc56c5cc94b5cf4a727df60" class="navh">21.3.2 Protokoll- und Content-Handler</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mjc5b89e4473010478da26fc57c8062a40" class="navh">21.3.3 Im Detail: vom URL zur URLConnection</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj924f618643fb5ec03bc8cbe696417844" class="navh">21.3.4 Der Protokoll-Handler für Jar-Dateien</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="#mj5e7ad4990f3f7ccbf976c3eab61c5887" class="navh">21.3.5 Basic Authentication/Proxy-Authentifizierung</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_21_004.htm#mjeb9209c2668af7983ec6bb0564bc6b4d" class="navnav">21.4 Mit GET und POST Daten übergeben *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_004.htm#mj3aa8779b2f1ab93b3b38727e4d13e3f9" class="navnav">21.4.1 Kodieren der Parameter für Serverprogramme</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_004.htm#mjfac6821e962deeb3c2b82fcade53fdb6" class="navnav">21.4.2 Eine Suchmaschine mit GET-Request ansprechen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_004.htm#mj09ddf4c4d29f03c1fa3ffe5344c0875d" class="navnav">21.4.3 POST-Request absenden</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_21_005.htm#mj8ba2862796503ab879fa49a1124af188" class="navnav">21.5 Host- und IP-Adressen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_005.htm#mj0f02e7e92a15f342fa8c8790067d5ad8" class="navnav">21.5.1 Lebt der Rechner?</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_005.htm#mja458d15a1bc50cbc23a965b837d2dcba" class="navnav">21.5.2 IP-Adresse des lokalen Hosts</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_005.htm#mjc0969fd5dd1934cee2105b2c1559092f" class="navnav">21.5.3 Das Netz ist Klasse …</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_005.htm#mjc59bea256f67cd746428ad0ee486ce85" class="navnav">21.5.4 NetworkInterface</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_21_006.htm#mjcd64e398cec5737d9a288a4b4df04e2b" class="navnav">21.6 Mit dem Socket zum Server</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_006.htm#mj6526ba613a9c918e8ccf70a8c3ca5599" class="navnav">21.6.1 Das Netzwerk ist der Computer</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_006.htm#mj2ff12752264f561d87686536916021cc" class="navnav">21.6.2 Sockets</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_006.htm#mjfe60f5f7ed5d676625e4baac0611e75e" class="navnav">21.6.3 Eine Verbindung zum Server aufbauen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_006.htm#mj017969768211807334050be5a3c5df81" class="navnav">21.6.4 Server unter Spannung: die Ströme</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_006.htm#mje0a69a84c474cc332bb06aaa19de7822" class="navnav">21.6.5 Die Verbindung wieder abbauen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_006.htm#mjf57d5057f525ec0bb30fb3baad9ef3d2" class="navnav">21.6.6 Informationen über den Socket *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_006.htm#mjdb0c24f8269e83946df526f3a9aeed4c" class="navnav">21.6.7 Reine Verbindungsdaten über SocketAddress *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_21_007.htm#mj1ba27dc5fdf53f527163767f188e1d2e" class="navnav">21.7 Client-Server-Kommunikation</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_007.htm#mj759e79b3a43e232270c0039832106d0f" class="navnav">21.7.1 Warten auf Verbindungen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_007.htm#mj0604389969fe7bded72be959d4f8ef23" class="navnav">21.7.2 Ein Multiplikationsserver</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_007.htm#mj565a926d79ff0b07fd9b504e58a1e02b" class="navnav">21.7.3 Blockierendes Lesen</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_007.htm#mj47e2d40604b1b1b87a3c62d75a377747" class="navnav">21.7.4 Von außen erreichbar sein *</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_21_008.htm#mjdc801150d9138730cd0f8ec13f024473" class="navnav">21.8 Apache HttpComponents und Commons Net</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_008.htm#mj7bee34b45f93eab88b7ac98166846793" class="navnav">21.8.1 HttpComponents</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline"><strong><a href="javainsel_21_008.htm#mj1fee4bad0e1e74fcc6114dd6367afcb1" class="navnav">21.8.2 Jakarta Commons Net</a></strong></td>
</tr>
<tr>
<td valign="baseline" width="10"> </td>
<td valign="baseline" width="10"><img src="common/pfeil_rechts5.gif" width="10" height="10" border="0" alt="Pfeil"></td>
<td valign="baseline" colspan="2"><strong><a href="javainsel_21_009.htm#mj79da1cdf9f3c74dd63bb1dea9a5ec49c" class="navnav">21.9 Zum Weiterlesen</a></strong></td>
</tr>
</table><br></td>
</tr>
</table>
<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#eeeeee">
<tr>
<td><div class="main"><a id="mj2552385424dfea123df910156b6be1bd" name="mj2552385424dfea123df910156b6be1bd"></a><a name="t21"></a><a name="t2t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div>
<h2 class="t2"><span class="cfett">21.3</span> Die Klasse URLConnection *  <a href="#t2t32"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><img src="common/15x15leer.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></h2>
<p>Die Objekte der Klasse <span class="clisting">URLConnection</span> sind für den Empfang der Inhalte der URL-Objekte verantwortlich. Die Klasse ist abstrakt, und die Unterklassen implementieren die Protokolle, mit denen die Verbindung zum Inhalt aufgebaut wird. Die Unterklassen bedienen sich dabei der Objekte der Klasse <span class="clisting">URLStreamHandler</span>, mit denen der eigentliche Inhalt ausgelesen wird.</p><a id="mj361cf58450bed19b4f7135a90e9622f8" name="mj361cf58450bed19b4f7135a90e9622f8"></a><a name="t31"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t32"></a><h3 class="t3"><span class="cfett">21.3.1</span> Methoden und Anwendung von URLConnection  <a href="#t2t33"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t31"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Die Klasse <span class="clisting">URLConnection</span> ist ein wenig HTTP-lastig, denn viele Methoden haben nur für URLs auf Webseiten eine Bedeutung. So stellt die Klasse Methoden bereit, um die HTTP-Header zu lesen. Das ist etwas untypisch für andere Protokolle, die vielleicht keine Header setzen. Da eine Datei, die vom Webserver kommt, den Inhalt (engl. <span class="ckursiv">content</span>) immer ankündigt, kann die Klasse <span class="clisting">URLConnection</span> mit einem <span class="ckursiv">Content-Handler</span> den Inhalt erkennen.</p>
<div class="bildbox">
<p><a name="IDAKH2D"></a><a onClick="OpenWin('bilder/urlconnectionuml.gif','Abbildung',800,800)"><img border="0" src="bilderklein/kleinurlconnectionuml.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<h4 class="t4">Zum Datum</h4>
<p>Um zu erfahren, wann die Datei auf dem Server gelandet ist, kann <span class="clisting">getDate()</span> beziehungsweise <span class="clisting">getLastModified()</span> verwendet werden:</p>
<p class="tabunter"><strong>Listing 21.3    </strong>com/tutego/insel/net/UrlConnectionHeader.java, main()</p>
<div class="listing"><pre class="prettyprint">URL url = new URL( "http://www.tutego.com/index.html" );
URLConnection con = url.openConnection();
System.out.println( con );
System.out.println( "Date            : " + new Date(<span class="cfett">con.getDate()</span>) );
System.out.println( "Last Modified   : " + new Date(con.getLastModified()) );
System.out.println( "Content encoding: " +<span class="cfett"> con.getContentEncoding()</span> );
System.out.println( "Content type    : " +<span class="cfett"> con.getContentType()</span> );
System.out.println( "Content length  : " +<span class="cfett"> con.getContentLength()</span> );</pre></div>
<p>Die Programmzeilen würden etwa folgende Ausgabe erzeugen:</p>
<div class="listing"><pre class="prettyprint">sun.net.www.protocol.http.HttpURLConnection:http://www.tutego.com/index.html
Date            : Tue Mar 27 10:02:28 CEST 2007
Last Modified   : Mon Mar 26 12:01:45 CEST 2007
Content encoding: null
Content type    : text/html
Content length  : 16116</pre></div>
<h4 class="t4">HTTP-Header</h4>
<p>Die meisten Header-Attribute verarbeitet <span class="clisting">getHeaderField()</span>. Die Methode <span class="clisting">getHeaderFieldInt()</span> ist eine Fassade und ruft <span class="clisting">Integer.parseInt(getHeaderField(name))</span> auf. Ebenso wandelt <span class="clisting">getHeaderFieldDate()</span> mittels <span class="clisting">getHeaderField()</span> den String zuerst in ein <span class="clisting">long</span> um und konvertiert ihn anschließend in ein <span class="clisting">Date</span>-Objekt. Sehen wir uns zwei weitere Methoden an:</p>
<p class="tabunter"><strong>Listing 21.4    </strong>java/net/URLConnection.java, Ausschnitt</p>
<div class="listing"><pre class="prettyprint">public String getContentType() {
  return getHeaderField("content-type");
}
public long getLastModified() {
  return getHeaderFieldDate("last-modified", 0);
}</pre></div>
<p>Wie nun <span class="clisting">getHeaderField()</span> wirklich implementiert ist, können wir nicht sehen, da es sich dabei um eine Methode handelt, die von einer Sun-Unterklasse überschrieben wird. Prinzipiell ist die <span class="clisting">URLConnection</span>-Klasse zwar für alle Protokolle gleichwertig, doch an anderer Stelle wurde schon erwähnt, dass sie eher zu Gunsten von HTTP entscheidet. Deshalb muss ein Rückgabewert von <span class="clisting">getLastModified()</span> von einer FTP-Verbindung mit Vorsicht genossen werden.</p>
<h4 class="t4">Verbindung nur mit Lesen oder Schreiben</h4>
<p>Über eine <span class="clisting">URLConnection</span> lassen sich Daten lesen und auch schreiben. Standardmäßig ist die Verbindung zur Eingabe bereit, aber zur Ausgabe nicht. Die Zustände ändern die Methoden <span class="clisting">setDoInput</span><span class="clisting">(boolean)</span> und <span class="clisting">setDoOutput</span><span class="clisting">(boolean)</span>. Insbesondere wenn der initiierende Client Daten zurücksenden möchte, muss er mit <span class="clisting">setDoOutput(true)</span> die <span class="clisting">URLConnection</span> initialisieren.</p><a id="mj13ed071a8bc56c5cc94b5cf4a727df60" name="mj13ed071a8bc56c5cc94b5cf4a727df60"></a><a name="t32"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t33"></a><h3 class="t3"><span class="cfett">21.3.2</span> Protokoll- und Content-Handler  <a href="#t2t34"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t32"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Falls ein passender Content-Handler eingetragen ist, bietet <span class="clisting">getContent()</span> Zugriff auf den Inhalt eines <span class="clisting">URL</span>-Objekts. Mit einer kleinen Zeile können wir erfragen, welches Handler-Objekt eine URL-Klasse für den Datenstrom einsetzt:</p>
<div class="listing"><pre class="prettyprint">Object o = u.getContent();
System.out.println( "Schnapp: Ich habe einen " + o.getClass().getName() );</pre></div>
<p><span class="clisting">getContent()</span> erkennt nun am Content-Type oder an den ersten Bytes den Dateitypus. Dann konvertiert ein Content-Handler die Bytes seines Datenstroms in ein Java-Objekt. Der Protokoll-Handler überwacht die Verbindung zum Server und stellt dann die Verbindung zu einem konkreten Content-Handler her, der die Konvertierung in ein Objekt übernimmt.</p>
<p>Eine Zusammenfassung von Content- und Protokoll-Handler:</p>
<ul class="gp">
<li><span class="cfett">Content-Handler</span>: Durch einen Content-Handler wird die Funktionalität der URL-Klasse erweitert. Es können Quellen verschiedener MIME-Typen durch die Methode <span class="clisting">getContent()</span> als Objekte zurückgegeben werden. Leider beschreibt die Java-Spezifikation nicht, welche Content-Handler bereitgestellt werden müssen. Für GIFs und JPEGs gibt es Handler, die gleich <span class="clisting">ImageProducer</span> anlegen.</li>
</ul>
<ul class="gp">
<li><span class="cfett">Protokoll-Handler</span>: Auch ein Protokoll-Handler erweitert die Möglichkeiten der <span class="clisting">URL</span>-Klassen. Das Protokoll ist der erste Teil einer URL und gibt bei Übertragungen wie »http« die Kommunikationsmethode an. Auch hier gibt es keine verbindliche Verpflichtung, diese bei einer JVM auszuliefern. So unterstützt das JDK Protokolle wie »file«, »ftp«, »jar«, »mailto«, doch schon Netscape benutzt andere Implementierungen der Klasse <span class="clisting">URLConnection</span>. Noch anders sieht es beim Microsoft Internet Explorer aus. Also hilft nur das Selberprogrammieren. [Wer sich mit der Implementierung von Protokoll-Handlern näher auseinandersetzen möchte, der findet im Buch »Java Network Programming« von Elliotte Rusty Harold die Beispiele für einen Finger-Protokoll-Handler online unter http://www.ibiblio.org/java/books/jnp3/examples/16/.
] </li>
</ul><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">abstract class java.net.<span class="cfett">URLConnection</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">Object getContent() throws IOException, UnknownServiceException</span>
Liefert den Inhalt, auf den die URL verweist. <span class="clisting">UnknownServiceException</span> ist eine Unterklasse von <span class="clisting">IOException</span>, es reicht also ein <span class="clisting">catch</span> auf <span class="clisting">IOException</span> aus.</li>
</ul><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">final class java.net.<span class="cfett">URL</span>
implements Serializable</pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">final Object getContent() throws IOException</span>
Liefert den Inhalt, auf den die URL verweist. Die Methode ist eine Abkürzung für <span class="clisting">openConnection().getContent()</span>. Wegen der Umleitung auf das <span class="clisting">URLConnection</span>-Objekt kann auch hier eine <span class="clisting">UnknownServiceException</span> auftauchen.</li>
</ul><a id="mjc5b89e4473010478da26fc57c8062a40" name="mjc5b89e4473010478da26fc57c8062a40"></a><a name="t33"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t34"></a><h3 class="t3"><span class="cfett">21.3.3</span> Im Detail: vom URL zur URLConnection  <a href="#t2t35"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t33"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Im Konstruktor des <span class="clisting">URL</span>-Objekts wird festgelegt, um welches Protokoll es sich handelt, etwa um HTTP. Dann wird die interne Methode <span class="clisting">getURLStreamHandler(Protokoll)</span> aufgerufen. Sie ist die eigentliche Arbeitsstelle und findet eine entsprechende Klasse, die das Protokoll behandelt. Das funktioniert so: An das Präfix <span class="clisting">sun.net.www.protocol.</span> wird der Name des Handlers (zum Beispiel <span class="clisting">ftp</span>, <span class="clisting">http</span>) und anschließend ein <span class="clisting">.Handler</span> angehängt. Nun wird über <span class="clisting">Class.forName(clsName)</span> nachgesehen, ob die Klasse schon im System geladen wurde. Wenn nicht, versucht der Klassenlader, über <span class="clisting">loadClass(clsName)</span> an die Klasse zu kommen. Falls die Klasse geladen werden konnte, wird sie mit <span class="clisting">newInstance()</span> initialisiert und als <span class="clisting">URLStreamHandler</span> zurückgegeben. Der Konstruktor von URL merkt sich diesen Handler in einer internen Variable <span class="clisting">handler</span>. Die Methode würde <span class="clisting">null</span> zurückliefern, falls sie mit dem Protokoll nichts anzufangen weiß &#8211; dies bekämen wir zu spüren, denn eine <span class="clisting">null</span> heißt <span class="clisting">MalformedURLException()</span>.</p>
<p><span class="clisting">openConnection()</span> von <span class="clisting">URL</span> macht nichts weiter, als vom jeweiligen Handler wiederum <span class="clisting">openConnection()</span> aufzurufen. Die Handler wissen für ihr Protokoll, wie die Verbindung aufzubauen ist. Denn für Webseiten mit dem HTTP-Protokoll sieht dies anders aus als bei einer Dateiübertragung mit dem FTP-Protokoll:</p>
<div class="listing"><pre class="prettyprint">public URLConnection openConnection() throws java.io.IOException
{
  return handler.openConnection( this );
}</pre></div>
<p>Der Handler übernimmt selbst das Öffnen. Zurückgegeben wird ein Objekt vom Typ <span class="clisting">URLConnection</span>, und wir können damit auf die Referenz lesend (wir holen uns also Informationen beispielsweise von der Webseite) und schreibend (zum Beispiel für eine CGI-Abfrage) reagieren. Die Klasse <span class="clisting">URLConnection</span> ist selbst abstrakt, und die Unterklassen implementieren ihr eigenes Protokoll.</p>
<p>Es muss betont werden, dass bei der Erzeugung eines <span class="clisting">URLConnection</span>-Objekts noch keine Verbindung aufgebaut wird. Dies erfolgt mit den Methoden <span class="clisting">getOutputStream()</span> oder <span class="clisting">getInputStream()</span>. Der Handler von <span class="clisting">URLConnection</span> ist vom Typ <span class="clisting">URLStreamHandler</span>, eine abstrakte Superklasse, die von allen Stream-Protokoll-Handlern implementiert wird. Leider können wir diese Implementierung nicht im Quelltext sehen.</p><br><table width="100%" border="0" cellspacing="1" cellpadding="3">
<tr>
<td class="tabellentext">
<div class="listing"><pre class="prettyprint">abstract class java.net.<span class="cfett">URLConnection</span></pre></div>
</td>
</tr>
</table><br><ul class="gp">
<li><span class="clisting">URLConnection openConnection() throws IOException</span>
Liefert ein <span class="clisting">URLConnection</span>-Objekt, das die Verbindung zum entfernten Objekt vertritt. <span class="clisting">openConnection()</span> wird vom Protokoll-Handler immer dann aufgerufen, wenn eine neue Verbindung geöffnet wird.</li>
</ul><a id="mj924f618643fb5ec03bc8cbe696417844" name="mj924f618643fb5ec03bc8cbe696417844"></a><a name="t34"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t35"></a><h3 class="t3"><span class="cfett">21.3.4</span> Der Protokoll-Handler für Jar-Dateien  <a href="#t2t36"><img src="common/down.gif" width="15" height="15" border="0" alt="Zur nächsten Überschrift"></a><a href="#t2t34"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>Wir haben gesehen, dass <span class="clisting">url.openConnection()</span> den Datenstrom öffnet und einen passenden Protokoll-Behandler sucht. Um die typischen Behandler-Eigenschaften zu nutzen, passen wir den Typ der Rückgabe an, sodass wir zum Beispiel eine <span class="clisting">URLConnection</span> zu einer <span class="clisting">HttpURLConnection</span> aufwerten, wenn wir wissen, dass der zu erwartende Behandler eine HTTP-Verbindung übernimmt.</p>
<p>So wie <span class="clisting">HttpURLConnection</span> das Protokoll HTTP übernimmt, kümmert sich die <span class="clisting">JarURLConnection</span> um das Protokoll »jar«, das sich auf Java-Archive bezieht. Das Format für die URL beginnt mit dem Namen des Protokolls, dem hinter dem Doppelpunkt die URL folgt. Den Abschluss bildet zwingend die Zeichenfolge »!/«:</p>
<div class="listing"><pre class="prettyprint">URL url = new URL("jar:http://server.org/repository/path/my.jar?md=65<span class="cfett">!/</span>");</pre></div>
<p>Des Weiteren lässt sich im Archiv eine bestimmte Datei auswählen. Die Angabe folgt dann hinter dem Trenner »!/«:</p>
<div class="listing"><pre class="prettyprint">String host = "http://server.org/repository/path/my.jar?md=65";
String path = "a/a.class";
URL url = new URL( "jar:" + host + "!/" + path );</pre></div>
<p>Nach dem Aufbau des URL-Objekts liefert <span class="clisting">url.openConnection()</span> das <span class="clisting">URLConnection</span>-Objekt, das wir aber explizit an <span class="clisting">JarURLConnection</span> anpassen. Das bietet die Möglichkeit, mit <span class="clisting">getJarFile()</span> auf das Java-Archiv zuzugreifen:</p>
<div class="listing"><pre class="prettyprint">JarURLConnection conn = (JarURLConnection) url.openConnection();
JarFile jarFile = conn.getJarFile();</pre></div>
<p>Das <span class="clisting">JarFile</span> repräsentiert die Datei mit ihren Dateien, die vom Typ <span class="clisting">JarEntry</span> sind. Mit der Methode <span class="clisting">getEntry(String)</span> lässt sich eine bestimmte Datei auswählen. Eine Liste der eingebundenen Dateien liefert <span class="clisting">entries()</span> über eine <span class="clisting">Enumeration</span>:</p>
<div class="listing"><pre class="prettyprint">for ( Enumeration it = jarFile.entries(); it.hasMoreElements(); )
{
  JarEntry entry = ( JarEntry ) it.nextElement();
  if ( ! entry.isDirectory() )
    System.out.println( entry + ", " + entry.getSize() );
}</pre></div>
<p>Während <span class="clisting">getJarFile()</span> das gesamte Archiv repräsentiert, kann ja in der URL gleich eine ganz konkrete Datei ausgewählt sein. Dann ist <span class="clisting">JarFile</span> gar nicht nötig, denn das Interesse ist nun bei einer konkreten Datei. Die liefert <span class="clisting">getJarEntry()</span> auf dem <span class="clisting">JarURLConnection</span>-Objekt wieder als <span class="clisting">JarEntry</span>-Objekt.</p>
<p>So viele Methoden bietet <span class="clisting">JarURLConnection</span> nicht an, doch kann <span class="clisting">getManifest()</span> (liefert ein Manifest-Objekt) nützlich sein, um an die Beschreibung des Archivs zu gelangen.</p>
<p>Um den Inhalt zu beziehen, vermuten wir bei <span class="clisting">JarEntry</span> eine Methode, die einen Strom liefert. Dem ist aber nicht so. Stattdessen gibt es eine Methode <span class="clisting">getInputStream()</span> bei <span class="clisting">JarFile</span>, die als Parameter den <span class="clisting">JarEntry</span> erwartet:</p>
<div class="listing"><pre class="prettyprint">JarFile jarFile = conn.getJarFile();
ZipEntry entry = jarFile.getEntry( "a/a.class" );
InputStream in = new BufferedInputStream( jarFile.getInputStream(entry) );</pre></div><a id="mj5e7ad4990f3f7ccbf976c3eab61c5887" name="mj5e7ad4990f3f7ccbf976c3eab61c5887"></a><a name="t35"></a><br><div align="center"><a href="#top"><img src="common/jupiters.gif" border="0" alt="Galileo Computing - Zum Seitenanfang"></a></div><a name="t2t36"></a><h3 class="t3"><span class="cfett">21.3.5</span> Basic Authentication/Proxy-Authentifizierung  <img src="common/15x15leer.gif" width="15" height="15" border="0" alt="top"><a href="#t2t35"><img src="common/top.gif" width="15" height="15" border="0" alt="Zur vorigen Überschrift"></a></h3>
<p>URL-Verbindungen können durch die Basic Authentication, also durch ein Passwort, geschützt sein. Anwender bemerken dies, wenn sich ein Eingabedialog öffnet, der die Eingabe eines Namens und eines Passworts erzwingt. Beispiel: Eine fiktive Webseite <span class="ckursiv">http://www.bla.net/login/</span> zeigt einen Eingabedialog. Erst die Identifizierung mit dem Benutzernamen »user« und dem Passwort »abc« gibt den Inhalt der Webseite preis.</p>
<div class="bildbox">
<p><a name="IDAU12D"></a><a onClick="OpenWin('bilder/passwordprotectedurl.gif','Abbildung',800,800)"><img border="0" src="bilderklein/kleinpasswordprotectedurl.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<p>Ohne das Login kommt auch ein Java-Programm nicht an die Seite. Daher muss der Java-Client der Authentifizierungsbitte nachkommen und Benutzername sowie Passwort schicken. Glücklicherweise geht das in Java mit der Klasse <span class="clisting">java.net.Authenticator</span> ganz einfach:</p>
<p class="tabunter"><strong>Listing 21.5    </strong>com/tutego/insel/net/BasicAuth.java, main()</p>
<div class="listing"><pre class="prettyprint">Authenticator.setDefault( new Authenticator()
{
  @Override protected PasswordAuthentication getPasswordAuthentication()
  {
    System.out.printf( "url=%s, host=%s, ip=%s, port=%s%n",
                       getRequestingURL(), getRequestingHost(),
                       getRequestingSite(), getRequestingPort() );

    return new PasswordAuthentication( "user", "abc".toCharArray() );
  }
} );

URL url = new URL( "http://www.bla.net/login/" );
System.out.println( new Scanner( url.openStream() ).useDelimiter( "\\Z" ).next() );</pre></div>
<p>Die Anweisung <span class="clisting">Authenticator.setDefault()</span> setzt einen neuen <span class="clisting">Authenticator</span>, den die URL-Klasse immer dann nutzt, wenn eine Verbindung aufgebaut wird. Dann ruft die Java-Bibliothek unsere überschriebene Methode <span class="clisting">getPasswordAuthentication()</span> auf, in der wir ein <span class="clisting">PasswordAuthentication</span>-Objekt liefern, welches die Benutzernamen und Passwort kodiert. Da <span class="clisting">getPasswordAuthentication()</span> eine überschriebene Methode ist, kann sie über diverse <span class="clisting">getXXX()</span>-Methoden auf Zustände zurückgreifen &#8211; die Verbindungsdaten wie Host usw. Diese Daten sind nicht unwichtig, da wir ja beabsichtigen, für unterschiedliche Webseiten unterschiedliche Benutzer und Passwörter verwenden zu können.</p>
<div class="bildbox">
<p><a name="IDAH32D"></a><a onClick="OpenWin('bilder/authenticator.gif','Abbildung',800,800)"><img border="0" src="bilderklein/kleinauthenticator.gif" alt="Abbildung"><br><span class="tabunter">Hier klicken, um das Bild zu vergrößern</span></a></p>
</div>
<h4 class="t4">Proxy-Authorization</h4>
<p>Um nicht nur eine Benutzer-Authentifizierung, sondern auch eine Authentifizierung für den Proxy zu realisieren, gibt es zwei Möglichkeiten:</p>
<div class="listing"><pre class="prettyprint">System.setProperty( "http.proxyUserName", proxyUser );
System.setProperty( "http.proxyPassword", proxyPass );</pre></div>
<p>Eine andere Variante ist, die Header-Variable »Proxy-Authorization« zu setzen:</p>
<div class="listing"><pre class="prettyprint">URLConnection conn = url.openConnection();
String base64 = "Basic " + new sun.misc.BASE64Encoder().encode((user + ":" + passwd).getBytes() );<span class="cfett">
conn.setRequestProperty( "Proxy-Authorization",</span>
 <span class="cfett"> "Basic " +</span>
 <span class="cfett"> new sun.misc.BASE64Encoder().encode((proxyUser + ":" + proxyPass).getBytes()) );</span>
conn.connect();
InputStream in = conn.getInputStream();</pre></div><br><hr><a name="kommentar"></a><h3>Ihr Kommentar</h3>
                       Wie hat Ihnen das &lt;openbook&gt; gefallen? Wir freuen uns immer über Ihre freundlichen und kritischen Rückmeldungen.
                       <form action="http://www.galileo-press.de/feedback/openbook" method="post" style="text-align: center; margin-top: 10px;"><input type="hidden" name="openbookurl" value="javainsel9/.htm"><input type="hidden" name="buchtitel" value="Java ist auch eine Insel"><input type="hidden" name="Kapitel" value="21.3 Die Klasse URLConnection *"><table border="0">
<tr>
<td><label for="name">Name</label><br></td>
<td><input type="text" name="name" id="name" size="40"><br></td>
</tr>
<tr>
<td><label for="email">E-Mail</label><br></td>
<td><input type="text" name="email" id="email" size="40"><br></td>
</tr>
<tr>
<td valign="top"><label for="comment">Ihr Kommentar</label><br></td>
<td><textarea name="comment" id="comment" rows="10" cols="40"></textarea><br></td>
</tr>
<tr>
<td>
</td>
<td><input type="submit" value="Kommentar absenden"></td>
</tr>
</table>
</form>
</div></td>
</tr>
</table></td>
</tr>
<tr>
<td width="100%" class="start" colspan="1" height="22" align="center"><table width="100%" border="0" cellspacing="0" cellpadding="0">
<tr>
<td width="25%"><a href="javainsel_21_002.htm" class="navnav"> &lt;&lt;   zurück</a></td>
<td width="49%"><div align="center"><a class="navnav" href="#">&lt;top&gt;</a></div></td>
<td align="right" width="25%"><div align="right"><a href="javainsel_21_004.htm" class="navnav">vor   &gt;&gt; </a></div></td>
</tr>
</table></td>
</tr>
</table>
</div></td>
<td width="10" valign="top">  </td>
<td width="160" valign="top">
<table border="0" cellpadding="0" cellspacing="0" width="160">
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2">
&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opjiVIV" class="autor">
<strong>Zum Katalog</strong></a>

</td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2">
<img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><a href="http://www.galileocomputing.de/2254?GPP=opjiVIV">
<img src="common/9783836215060_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Java ist auch eine Insel" title="Zum Katalog: Java ist auch eine Insel">
<br><br><br><br><br><br><strong>Java ist auch eine Insel</strong><br><img src="common/pfeil_rechts5.gif" border="0" alt="">Jetzt bestellen</a><br /><br />
</td>
</tr>
</table>
</td>

</tr>
</table>
</td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Ihre Meinung?</strong></a></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">

<table cellspacing="3">
<tr>
<td>Wie hat Ihnen das &lt;openbook&gt; gefallen?<br><a href="#kommentar"><img src="common/pfeil_rechts5.gif" border="0" alt="">Ihre Meinung</a>
<br><br></td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
<tr>

<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
</td>
</tr>

<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>
<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2">&nbsp;<a href="http://www.galileocomputing.de/katalog/buecher/?GPP=opjiVIV" class="autor"><strong>Buchempfehlungen</strong></a></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2285?GPP=opjiVIV">
<img src="common/9783836215275_s.gif" width="102" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Computergeschichte(n) – nicht nur für Geeks" title="Zum Katalog: Computergeschichte(n) – nicht nur für Geeks"><br><br><br><br><br><br>&nbsp;Computergeschichte(n)<br>&nbsp;nicht nur für Geeks</a><br><br></td>
</tr>

<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/1949?GPP=opjiVIV">
<img src="common/9783836213080_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Java und XML" title="Zum Katalog: Java und XML"><br><br><br><br><br><br><br>&nbsp;Java und XML</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2346?GPP=opjiVIV">
<img src="common/9783836215688_s.gif" width="105" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in Java" title="Zum Katalog: Einstieg in Java"><br><br><br><br><br><br><br>&nbsp;Einstieg<br>&nbsp;in Java</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2051?GPP=opjiVIV">

<img src="common/9783836213677_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Einstieg in XML" title="Zum Katalog: Einstieg in XML"><br><br><br><br><br><br><br>&nbsp;Einstieg<br>&nbsp;in XML</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2322?GPP=opjiVIV">
<img src="common/9783836215527_s.gif" width="112" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Visual C# 2010" title="Zum Katalog: Visual C# 2010"><br><br><br><br><br><br><br>&nbsp;Visual C# 2010</a><br><br></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2212?GPP=opjiVIV">
<img src="common/9783836214742_s.gif" width="119" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: Professionell entwickeln mit Visual C# 2010" title="Zum Katalog: Professionell entwickeln mit Visual C# 2010"><br><br><br><br><br><br><br>&nbsp;Professionell<br>&nbsp;entwickeln mit<br>&nbsp;Visual C# 2010</a><br><br></td>
</tr>

<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td><td valign="top">
<a href="http://www.galileocomputing.de/2156?GPP=opjiVIV">
<img src="common/9783836214292_s.gif" width="108" height="90" border="0" align="left" hspace="4" vspace="8" alt="Zum Katalog: C++ von A bis Z" title="Zum Katalog: C++ von A bis Z"><br><br><br><br><br><br><br>&nbsp;C++ von A bis Z</a><br><br></td>
</tr>
</table></td>
</tr>
<tr>
<td><img src="common/leer.gif" height="2" width="1" border="0" /></img></td>
</tr>

<tr>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tr>
<td class="start" height="20" colspan="2"><span class="autor"><strong>&nbsp;Shopping</strong></span></td>
</tr>
<tr>
<td valign="top" class="tbl4" width="2"><img src="common/leer.gif" border="0" height="1" width="1"></td>
<td valign="top">
<table cellspacing="3">
<tr>
<td><b>Versandkostenfrei</b> bestellen in Deutschland und &Ouml;sterreich<br><a href="http://www.galileocomputing.de/hilfe/Shop/?GPP=opjiVIV"><img src="common/pfeil_rechts5.gif" border="0" alt="Info">Info</a><br><br></td>

</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table>
</td>
</tr>
</table><br><br><hr width="70%" align="center">
<div align="center">
<p class="standard"><strong>Copyright © Galileo Press 2011</strong><br>
        Für Ihren privaten Gebrauch dürfen Sie die Online-Version natürlich ausdrucken.
        Ansonsten unterliegt das &lt;openbook&gt; denselben Bestimmungen, wie die
        gebundene Ausgabe: Das Werk einschließlich aller seiner Teile ist urheberrechtlich
        geschützt. Alle Rechte vorbehalten einschließlich der Vervielfältigung, Übersetzung,
        Mikroverfilmung sowie Einspeicherung und Verarbeitung in elektronischen Systemen.</p><br><a href="http://www.galileocomputing.de/">[Galileo Computing]</a><br><br>
      Galileo Press, Rheinwerkallee 4, 53227 Bonn, Tel.: 0228.42150.0, Fax 0228.42150.77, <a href="mailto:info@galileo-press.de">info@galileo-press.de</a></div><br><br></body>
</html>
